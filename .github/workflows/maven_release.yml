name: Maven Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version'
        required: true
      nextVersion:
        description: 'Next development version (with -SNAPSHOT suffix)'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important for git history

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
          server-id: central
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Configure Git User
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Prepare Release
        run: |
          mvn versions:set -DnewVersion=${{ github.event.inputs.releaseVersion }} -Pdefault
          git commit -am "Prepare release ${{ github.event.inputs.releaseVersion }}"
          git tag -a v${{ github.event.inputs.releaseVersion }} -m "Release v${{ github.event.inputs.releaseVersion }}"

      - name: Copy Maven settings.xml
        run: |
          env
          mkdir -p ~/.m2
          cp .github/settings.xml ~/.m2/settings.xml

      - name: Deploy to Maven Central
        run: mvn --batch-mode -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} clean deploy -Prelease
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Build with Docs
        run: mvn -B package --file pom.xml -Pdocs

      - name: Verify docs output exists
        run: |
          if [ ! -d "docs/target/docs/multipage" ]; then
            echo "Expected directory 'docs/target/docs/multipage' not found."
            echo "Please build your docs before deploying (ensure the build job populates this path)."
            exit 1
          fi

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/target/docs/multipage

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Prepare for Next Development Version
        run: |
          mvn versions:set -DnewVersion=${{ github.event.inputs.nextVersion }} -Pdefault
          git commit -am "Prepare for next development iteration: ${{ github.event.inputs.nextVersion }}"

      - name: Push Changes
        run: git push && git push --tags

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.releaseVersion }}
          name: Release v${{ github.event.inputs.releaseVersion }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
