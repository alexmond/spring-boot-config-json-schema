{
  "$schema" : "https://json-schema.org/draft/2020-12/schema",
  "$id" : "urn:example",
  "title" : "Spring Boot Configuration Properties",
  "description" : "Auto-generated schema from configuration metadata",
  "type" : "object",
  "$defs" : {
    "loggerLevel" : {
      "enum" : [ "TRACE", "trace", "DEBUG", "debug", "INFO", "info", "WARN", "warn", "ERROR", "error", "FATAL", "fatal", "OFF", "off" ],
      "type" : "string"
    },
    "loggerLevelProp" : {
      "type" : "object",
      "additionalProperties" : {
        "oneOf" : [ {
          "$ref" : "#/$defs/loggerLevel"
        }, {
          "$ref" : "#/$defs/loggerLevelProp"
        } ]
      }
    },
    "Locales" : {
      "enum" : [ "", "he", "th_TH_#Thai", "nds", "tk_TM_#Latn", "ti_ET", "ta_SG", "lv", "en_NU", "zh_SG_#Hans", "ff_LR_#Adlm", "en_JM", "kkj", "se_NO_#Latn", "sd__#Arab", "es_BO", "dz_BT", "mni", "yi", "bs_BA", "dsb_DE", "lb_LU_#Latn", "en_LR", "ar_TD", "cs", "el", "nus_SS_#Latn", "af", "ff_MR_#Latn", "sw_UG", "smn", "tk_TM", "sr_ME_#Cyrl", "ar_EG", "dsb", "os_GE_#Cyrl", "yo_NG", "se_NO", "khq", "en_PW", "pl_PL", "sr_CS", "ne_IN", "agq_CM_#Latn", "ar_EH", "bs_BA_#Latn", "nds_DE", "nb_SJ", "es_US", "sa", "en_US_POSIX", "pt_MO", "zh__#Hans", "lb_LU", "dsb_DE_#Latn", "is_IS_#Latn", "so_KE", "dje_NE", "hy_AM_#Armn", "ff_GH_#Latn", "fr_PM", "ar_KM", "no_NO_NY", "pl_PL_#Latn", "agq_CM", "gu_IN_#Gujr", "teo", "tr_TR", "eu", "kl_GL_#Latn", "ar_MR", "es_DO", "ru", "az", "su__#Latn", "fa", "kl_GL", "en_NR", "nd", "kk", "nds_DE_#Latn", "rw_RW_#Latn", "hy", "en_AU", "en_CY", "tr_TR_#Latn", "ti_ER", "nus_SS", "en_RW", "ksb", "luo", "lb", "hr_HR_#Latn", "su", "ln_CD", "nnh_CM", "no", "dje_NE_#Latn", "ar_IL", "mgh", "or_IN", "ps_AF_#Arab", "az__#Latn", "ta", "lag", "ar_SY", "luo_KE_#Latn", "ksf_CM", "bo", "tt_RU", "om_KE", "en_AS", "fr_VU", "zh_TW", "sd_IN", "kln", "nnh_CM_#Latn", "mai", "pt_MZ", "fr_NE", "fur_IT_#Latn", "ast_ES_#Latn", "bez_TZ_#Latn", "ksb_TZ", "my_MM_#Mymr", "en_JE", "ln_CF", "uz_AF", "da_DK_#Latn", "en_CX", "ak_GH_#Latn", "en_AT", "gl", "sr__#Cyrl", "yue_CN_#Hans", "ff__#Adlm", "kn_IN", "ga", "qu", "en_TZ", "en_PR", "mua", "jv", "ps", "sn", "km", "zgh", "fr_NC", "es", "jgo", "gd_GB", "gsw", "fr_CM", "wae_CH_#Latn", "pa_IN_#Guru", "ur_PK_#Arab", "pcm_NG_#Latn", "teo_UG", "ceb", "no_NO_#Latn", "bn_BD_#Beng", "smn_FI_#Latn", "en_NL", "ln_CG", "ne_NP_#Deva", "te", "az_AZ", "sl", "el_CY", "mr_IN", "ku_TR", "ha", "guz_KE_#Latn", "lrc_IR", "gsw_FR", "es_HN", "hu_HU", "ff_SN", "sbp", "sq_MK", "sr_BA_#Cyrl", "bg_BG_#Cyrl", "so_SO_#Latn", "et_EE", "sw", "ar_OM", "fy_NL", "nmg", "tr_CY", "lv_LV_#Latn", "uz_UZ_#Latn", "lrc_IQ", "dua_CM", "de_IT", "pt_BR_#Latn", "vai__#Vaii", "fr_TN", "sr_RS", "de_CH", "sw_TZ_#Latn", "fr_PF", "pt_GQ", "gu", "vun_TZ", "jmc_TZ", "mg_MG_#Latn", "en_TV", "lo", "en_PN", "lu_CD_#Latn", "zh_HK_#Hans", "nl_NL", "en_GY", "bs__#Latn", "dyo_SN", "os", "nl_CW", "ar_DZ", "pt_CH", "fr_GQ", "am", "en_NG", "fr_CI", "ki_KE", "ia_001", "en_PK", "zh_CN", "en_LC", "rw", "brx_IN", "ff_BF_#Adlm", "gv_IM", "kw_GB_#Latn", "bm_ML_#Latn", "yav_CM_#Latn", "mk_MK", "en_TT", "dav", "sl_SI", "sg_CF_#Latn", "ses", "fi_FI_#Latn", "xh_ZA", "fr_BE", "jgo_CM", "ff_NE_#Adlm", "es_VE", "mer_KE", "mg", "mr", "en_BM", "nb_NO", "seh", "kea_CV", "mgo", "vi_VN", "en_US", "mfe_MU", "fr_BF", "pa__#Guru", "it_SM", "fa_IR_#Arab", "sa_IN_#Deva", "fr_YT", "gu_IN", "ff_CM_#Latn", "ast", "mt_MT_#Latn", "fi_FI", "yue__#Hans", "ca_FR", "sr_BA_#Latn", "ccp_BD_#Cakm", "uk_UA_#Cyrl", "fr_DJ", "ks__#Arab", "ff_GW_#Adlm", "ha_GH", "yi_001_#Hebr", "af_ZA_#Latn", "ti_ET_#Ethi", "to_TO_#Latn", "de_BE", "am_ET_#Ethi", "ff_GW_#Latn", "cgg", "zh_MO", "mua_CM_#Latn", "nyn_UG", "ms_MY", "rn_BI_#Latn", "ta_LK", "ksf", "de_DE_#Latn", "cy", "ceb_PH", "sq", "fr", "tg_TJ", "vun_TZ_#Latn", "qu_PE", "de", "es_EC", "mk_MK_#Cyrl", "ff_CM_#Adlm", "lg_UG", "ff_NE_#Latn", "zu_ZA", "fr_FR_#Latn", "su_ID_#Latn", "cgg_UG", "ksh_DE", "lg", "ru_RU", "pcm_NG", "en_DM", "sd", "he_IL_#Hebr", "ga_IE", "en_BI", "yue_CN", "rm_CH_#Latn", "en_WS", "fr_LU", "so", "mi_NZ", "ar_ER", "kab", "nus", "sn_ZW", "es_EA", "ga_GB", "th_TH_TH_#u-nu-thai", "hi", "fr_SC", "en_SL", "ff_NG_#Latn", "no_NO", "ff_NG_#Adlm", "zh_MO_#Hant", "en_SH", "vai", "sd_PK_#Arab", "de_LU", "mi", "mt", "de_DE", "nn_NO_#Latn", "en_DK", "yav", "so_DJ", "lt_LT", "kam", "ro", "eo_001", "ps_PK", "ee", "en_UM", "en_SI", "vai_LR_#Vaii", "lo_LA", "chr", "rof_TZ_#Latn", "ar_LB", "lrc_IR_#Arab", "af_ZA", "doi", "ff_GN", "ksh_DE_#Latn", "es_BZ", "ar_AE", "eo_001_#Latn", "hr_HR", "rof_TZ", "as", "it", "ks_IN", "my_MM", "mn_MN", "ur_PK", "da_DK", "en_FM", "en_BE", "ii", "fr_WF", "mzn_IR", "naq", "en_SG", "kln_KE", "tzm", "ff_GM_#Latn", "tt_RU_#Cyrl", "teo_UG_#Latn", "fur", "om", "asa_TZ_#Latn", "bez_TZ", "ff_GN_#Latn", "sl_SI_#Latn", "en_SD", "mai_IN_#Deva", "ja_JP_JP_#u-ca-japanese", "es_SV", "pt_BR", "mni_IN_#Beng", "ml_IN", "ga_IE_#Latn", "en_FK", "is_IS", "bas_CM_#Latn", "en_DG", "hr", "pt_ST", "ak_GH", "lt", "uz_AF_#Arab", "ccp", "en_SE", "zh_CN_#Hans", "es_419", "ln_CD_#Latn", "kkj_CM_#Latn", "en", "guz_KE", "gsw_LI", "ccp_BD", "es_IC", "ca", "ar_TN", "bm_ML", "kw_GB", "pa_PK", "ug_CN", "jmc_TZ_#Latn", "ki_KE_#Latn", "es_BR", "khq_ML", "en_SB", "bo_CN_#Tibt", "chr_US", "rw_RW", "shi_MA_#Tfng", "ar_IQ", "nyn", "mk", "sat", "pa__#Arab", "en_DE", "ro_MD", "bs", "en_FI", "fy", "th", "uz_UZ", "dav_KE", "ia_001_#Latn", "sah_RU_#Cyrl", "en_SC", "en_UG", "en_NZ", "dje", "es_UY", "mas_KE", "mni_IN", "ru_UA", "sg_CF", "en_FJ", "de_LI", "en_BB", "smn_FI", "hr_BA", "yo_NG_#Latn", "de_AT", "lu_CD", "ar_001", "so_SO", "lv_LV", "ckb", "ar_KW", "sr_RS_#Cyrl", "bem", "da", "wae", "en_LS", "ig", "en_HK", "brx_IN_#Deva", "mer_KE_#Latn", "ce_RU", "ka_GE", "sw_TZ", "fr_RW", "mg_MG", "en_US_#Latn", "os_RU", "sr_RS_#Latn", "ky_KG", "tzm_MA_#Latn", "nl_NL_#Latn", "ku_TR_#Latn", "ki", "mfe_MU_#Latn", "nb", "kok", "ewo", "nn", "ar_JO", "gl_ES_#Latn", "bg", "kea", "zu", "ky_KG_#Cyrl", "am_ET", "fr_DZ", "bo_CN", "hsb", "qu_EC", "ka_GE_#Geor", "en_MS", "kok_IN_#Deva", "en_GG", "kde_TZ_#Latn", "sat_IN", "sr_ME", "sv_SE", "pcm", "sah", "mer", "en_ZM", "fr_ML", "ha_NG", "br", "ar_SA", "fa_AF", "fil_PH_#Latn", "sk", "om_ET_#Latn", "os_GE", "ckb_IQ_#Arab", "yi_001", "ml", "en_MT", "en_GH", "en_IL", "sv", "kn_IN_#Knda", "tzm_MA", "el_GR_#Grek", "ses_ML", "rwk_TZ_#Latn", "lkt_US", "sd__#Deva", "vai_LR_#Latn", "ku", "sw_CD", "ff_MR_#Adlm", "fil_PH", "it_VA", "es_PH", "es_ES", "es_CO", "bg_BG", "en_VC", "ses_ML_#Latn", "agq", "hsb_DE", "eu_ES_#Latn", "en_150", "sv_SE_#Latn", "ar_SD", "ha_NE", "en_KN", "ebu", "ro_RO", "sr_ME_#Latn", "es_GT", "ff_LR_#Latn", "bas_CM", "nd_ZW_#Latn", "fr_MG", "es_CL", "mn", "kam_KE", "fa_IR", "en_MO", "ja_JP_#Jpan", "wo", "shi__#Tfng", "en_BZ", "lkt_US_#Latn", "sq_AL", "ro_RO_#Latn", "twq_NE", "nmg_CM", "ta_IN_#Taml", "kab_DZ_#Latn", "az__#Cyrl", "en_MP", "en_GD", "tk", "sbp_TZ_#Latn", "shi__#Latn", "en_BW", "kab_DZ", "he_IL", "kde_TZ", "ta_MY", "sv_FI", "nd_ZW", "luy_KE_#Latn", "mni__#Beng", "ne", "en_IE", "zh_SG", "si_LK_#Sinh", "en_KI", "twq_NE_#Latn", "om_ET", "lo_LA_#Laoo", "sq_AL_#Latn", "ja_JP", "kam_KE_#Latn", "my", "ka", "ff_GH_#Adlm", "ko_KR_#Kore", "fr_MF", "ms_ID", "shi", "kl", "sa_IN", "yue_HK", "id", "en_SZ", "fo_FO_#Latn", "rwk_TZ", "zh", "es_PE", "mgh_MZ", "saq", "en_GB", "zh_HK_#Hant", "sat_IN_#Olck", "kk_KZ", "es_PA", "ar_PS", "bez", "fr_MC", "kw", "vai__#Latn", "ksh", "ur_IN", "ln", "ce_RU_#Cyrl", "gsw_CH", "luy_KE", "pt", "kkj_CM", "es_GQ", "mgh_MZ_#Latn", "ar_YE", "to", "en_SX", "ru_KZ", "et", "ko_KP", "nl_SR", "rof", "en_BS", "bem_ZM_#Latn", "be", "gv", "kln_KE_#Latn", "dua", "cgg_UG_#Latn", "nl_BQ", "ee_GH_#Latn", "ff_GN_#Adlm", "uz_UZ_#Cyrl", "hi_IN_#Deva", "guz", "en_KE", "mfe", "asa_TZ", "ja", "fr_SN", "or", "brx", "fr_MA", "pt_LU", "ff_GM_#Adlm", "fr_BL", "mgo_CM", "nmg_CM_#Latn", "mai_IN", "ko_KR", "tg_TJ_#Cyrl", "es_MX", "zu_ZA_#Latn", "doi_IN", "fi", "uz", "bs__#Cyrl", "sr__#Latn", "en_SS", "bo_IN", "rm", "shi_MA", "en_MG", "fr_BI", "hsb_DE_#Latn", "naq_NA_#Latn", "bn", "br_FR_#Latn", "kn", "nnh", "bn_BD", "es_ES_#Latn", "en_ZA", "cy_GB_#Latn", "fr_FR", "pa_IN", "en_MH", "fr_BJ", "vai_LR", "zh__#Hant", "jv_ID_#Latn", "sah_RU", "ps_AF", "ky", "mas", "bs_BA_#Cyrl", "xh_ZA_#Latn", "dav_KE_#Latn", "sk_SK", "xh", "khq_ML_#Latn", "mzn_IR_#Arab", "mn_MN_#Cyrl", "wo_SN", "ha_NG_#Latn", "fr_HT", "ru_RU_#Cyrl", "te_IN", "mas_KE_#Latn", "nl_SX", "lrc", "ce", "fr_CG", "gv_IM_#Latn", "mt_MT", "ko", "ms_MY_#Latn", "ml_IN_#Mlym", "nds_NL", "zgh_MA_#Tfng", "ak", "kde", "dz", "nyn_UG_#Latn", "en_VU", "ia", "to_TO", "ff_SL_#Latn", "seh_MZ", "xog_UG_#Latn", "ff_SN_#Adlm", "vi_VN_#Latn", "su_ID", "jgo_CM_#Latn", "ii_CN", "pa_PK_#Arab", "fr_RE", "bn_IN", "fr_GP", "pa", "zgh_MA", "uk_UA", "rwk", "rn", "tg", "hu", "fr_CH", "lg_UG_#Latn", "ceb_PH_#Latn", "en_NF", "twq", "sr_XK_#Cyrl", "bm", "nb_NO_#Latn", "ar_SS", "en_GU", "nl_AW", "en_AI", "fy_NL_#Latn", "xog_UG", "en_CM", "cs_CZ", "tr", "ca_ES", "hu_HU_#Latn", "rm_CH", "ru_MD", "ff_SN_#Latn", "en_TO", "ff_SL_#Adlm", "en_PG", "et_EE_#Latn", "fr_CF", "pt_TL", "en_ER", "sr_BA", "es_PY", "kok_IN", "be_BY_#Cyrl", "fr_TG", "dz_BT_#Tibt", "sr_XK_#Latn", "en_PH", "ig_NG", "fr_GN", "gd_GB_#Latn", "zh_MO_#Hans", "sat__#Olck", "se_FI", "ff", "en_CK", "ar_MA", "haw_US_#Latn", "en_AG", "fr_TD", "ebu_KE", "lt_LT_#Latn", "bem_ZM", "ewo_CM_#Latn", "xog", "ewo_CM", "fr_CD", "rn_BI", "en_NA", "mgo_CM_#Latn", "ms", "ug", "ca_IT", "qu_PE_#Latn", "lag_TZ", "id_ID", "teo_KE", "ca_AD", "qu_BO", "haw_US", "vi", "fr_CA", "kea_CV_#Latn", "sq_XK", "dyo", "mi_NZ_#Latn", "en_KY", "it_CH", "si_LK", "luo_KE", "en_AE", "it_IT", "eo", "ar_SO", "en_ZW", "nn_NO", "fr_MU", "pl", "se_SE", "en_TK", "mua_CM", "ur", "uz__#Arab", "saq_KE", "pt_GW", "se", "sn_ZW_#Latn", "ms_SG", "ee_TG", "ln_AO", "be_BY", "yue__#Hant", "km_KH_#Khmr", "it_IT_#Latn", "luy", "pt_CV", "uk", "es_PR", "mzn", "wae_CH", "tt", "ru_BY", "fo_DK", "ee_GH", "ar_BH", "kk_KZ_#Cyrl", "ug_CN_#Arab", "hi_IN", "en_CH", "saq_KE_#Latn", "asa", "fo_FO", "yo_BJ", "ast_ES", "fr_KM", "fr_MQ", "es_AR", "ff__#Latn", "doi_IN_#Deva", "en_MY", "sbp_TZ", "ebu_KE_#Latn", "uz__#Cyrl", "fil", "yue_HK_#Hant", "hy_AM", "en_GM", "fo", "ksb_TZ_#Latn", "ne_NP", "fur_IT", "ta_IN", "fr_GF", "lkt", "id_ID_#Latn", "is", "pt_AO", "te_IN_#Telu", "si", "en_001", "dua_CM_#Latn", "jv_ID", "lag_TZ_#Latn", "ru_KG", "fr_MR", "ksf_CM_#Latn", "ks", "zh_TW_#Hant", "ff_BF_#Latn", "as_IN", "zh_HK", "sw_KE", "th_TH", "as_IN_#Beng", "jmc", "yue", "en_MW", "naq_NA", "en_IO", "ar_QA", "ar_EG_#Arab", "en_CC", "pt_PT", "sk_SK_#Latn", "az_AZ_#Cyrl", "ckb_IQ", "shi_MA_#Latn", "es_CU", "ar", "en_VI", "haw", "eu_ES", "bas", "ig_NG_#Latn", "el_GR", "uz__#Latn", "yav_CM", "sg", "da_GL", "km_KH", "ckb_IR", "nl", "ks_IN_#Arab", "ca_ES_VALENCIA", "wo_SN_#Latn", "sd_IN_#Deva", "mr_IN_#Deva", "es_CR", "fr_GA", "sr", "ar_LY", "en_MU", "gl_ES", "az_AZ_#Latn", "en_IM", "gsw_CH_#Latn", "seh_MZ_#Latn", "en_GI", "en_CA", "gd", "chr_US_#Cher", "fr_SY", "or_IN_#Orya", "so_ET", "ca_ES_#Latn", "nl_BE", "ar_DJ", "dyo_SN_#Latn", "cy_GB", "en_VG", "en_TC", "sv_AX", "cs_CZ_#Latn", "af_NA", "vun", "en_IN", "lu", "yo", "es_NI", "ii_CN_#Yiii", "sd_PK", "mas_TZ", "ti", "ms_BN", "ccp_IN", "br_FR" ],
      "type" : "string"
    },
    "Charsets" : {
      "enum" : [ "Big5", "Big5-HKSCS", "CESU-8", "EUC-JP", "EUC-KR", "GB18030", "GB2312", "GBK", "IBM-Thai", "IBM00858", "IBM01140", "IBM01141", "IBM01142", "IBM01143", "IBM01144", "IBM01145", "IBM01146", "IBM01147", "IBM01148", "IBM01149", "IBM037", "IBM1026", "IBM1047", "IBM273", "IBM277", "IBM278", "IBM280", "IBM284", "IBM285", "IBM290", "IBM297", "IBM420", "IBM424", "IBM437", "IBM500", "IBM775", "IBM850", "IBM852", "IBM855", "IBM857", "IBM860", "IBM861", "IBM862", "IBM863", "IBM864", "IBM865", "IBM866", "IBM868", "IBM869", "IBM870", "IBM871", "IBM918", "ISO-2022-CN", "ISO-2022-JP", "ISO-2022-JP-2", "ISO-2022-KR", "ISO-8859-1", "ISO-8859-13", "ISO-8859-15", "ISO-8859-16", "ISO-8859-2", "ISO-8859-3", "ISO-8859-4", "ISO-8859-5", "ISO-8859-6", "ISO-8859-7", "ISO-8859-8", "ISO-8859-9", "JIS_X0201", "JIS_X0212-1990", "KOI8-R", "KOI8-U", "Shift_JIS", "TIS-620", "US-ASCII", "UTF-16", "UTF-16BE", "UTF-16LE", "UTF-32", "UTF-32BE", "UTF-32LE", "UTF-8", "windows-1250", "windows-1251", "windows-1252", "windows-1253", "windows-1254", "windows-1255", "windows-1256", "windows-1257", "windows-1258", "windows-31j", "x-Big5-HKSCS-2001", "x-Big5-Solaris", "x-euc-jp-linux", "x-EUC-TW", "x-eucJP-Open", "x-IBM1006", "x-IBM1025", "x-IBM1046", "x-IBM1097", "x-IBM1098", "x-IBM1112", "x-IBM1122", "x-IBM1123", "x-IBM1124", "x-IBM1129", "x-IBM1166", "x-IBM1364", "x-IBM1381", "x-IBM1383", "x-IBM29626C", "x-IBM300", "x-IBM33722", "x-IBM737", "x-IBM833", "x-IBM834", "x-IBM856", "x-IBM874", "x-IBM875", "x-IBM921", "x-IBM922", "x-IBM930", "x-IBM933", "x-IBM935", "x-IBM937", "x-IBM939", "x-IBM942", "x-IBM942C", "x-IBM943", "x-IBM943C", "x-IBM948", "x-IBM949", "x-IBM949C", "x-IBM950", "x-IBM964", "x-IBM970", "x-ISCII91", "x-ISO-2022-CN-CNS", "x-ISO-2022-CN-GB", "x-iso-8859-11", "x-JIS0208", "x-JISAutoDetect", "x-Johab", "x-MacArabic", "x-MacCentralEurope", "x-MacCroatian", "x-MacCyrillic", "x-MacDingbat", "x-MacGreek", "x-MacHebrew", "x-MacIceland", "x-MacRoman", "x-MacRomania", "x-MacSymbol", "x-MacThai", "x-MacTurkish", "x-MacUkraine", "x-MS932_0213", "x-MS950-HKSCS", "x-MS950-HKSCS-XP", "x-mswin-936", "x-PCK", "x-SJIS_0213", "x-UTF-16LE-BOM", "X-UTF-32BE-BOM", "X-UTF-32LE-BOM", "x-windows-50220", "x-windows-50221", "x-windows-874", "x-windows-949", "x-windows-950", "x-windows-iso2022jp" ],
      "type" : "string"
    }
  },
  "properties" : {
    "spring" : {
      "type" : "object",
      "properties" : {
        "webservices" : {
          "type" : "object",
          "properties" : {
            "path" : {
              "type" : "string",
              "description" : "Path that serves as the base URI for the services.",
              "default" : "/services"
            },
            "wsdl-locations" : {
              "type" : "array",
              "description" : "Comma-separated list of locations of WSDLs and accompanying XSDs to be exposed as beans.",
              "items" : {
                "type" : "string"
              }
            },
            "servlet" : {
              "type" : "object",
              "properties" : {
                "init" : {
                  "type" : "object",
                  "description" : "Servlet init parameters to pass to Spring Web Services.",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                },
                "load-on-startup" : {
                  "type" : "integer",
                  "description" : "Load on startup priority of the Spring Web Services servlet.",
                  "default" : -1
                }
              }
            }
          }
        },
        "data" : {
          "type" : "object",
          "properties" : {
            "web" : {
              "type" : "object",
              "properties" : {
                "pageable" : {
                  "type" : "object",
                  "properties" : {
                    "page-parameter" : {
                      "type" : "string"
                    },
                    "serialization-mode" : {
                      "type" : "string",
                      "description" : "Configures how to render Spring Data Pageable instances.",
                      "default" : "direct",
                      "enum" : [ "DIRECT", "direct", "VIA_DTO", "via_dto" ]
                    },
                    "one-indexed-parameters" : {
                      "type" : "boolean",
                      "description" : "Whether to expose and assume 1-based page number indexes. Defaults to \"false\", meaning a page number of 0 in the request equals the first page.",
                      "default" : false
                    },
                    "max-page-size" : {
                      "type" : "integer",
                      "description" : "Maximum page size to be accepted.",
                      "default" : 2000
                    },
                    "prefix" : {
                      "type" : "string",
                      "description" : "General prefix to be prepended to the page number and page size parameters.",
                      "default" : ""
                    },
                    "size-parameter" : {
                      "type" : "string",
                      "description" : "Page size parameter name.",
                      "default" : "size"
                    },
                    "default-page-size" : {
                      "type" : "integer",
                      "description" : "Default page size.",
                      "default" : 20
                    },
                    "qualifier-delimiter" : {
                      "type" : "string",
                      "description" : "Delimiter to be used between the qualifier and the actual page number and size properties.",
                      "default" : "_"
                    }
                  }
                },
                "sort" : {
                  "type" : "object",
                  "properties" : {
                    "sort-parameter" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "servlet" : {
          "type" : "object",
          "properties" : {
            "multipart" : {
              "type" : "object",
              "properties" : {
                "max-request-size" : {
                  "type" : "string",
                  "description" : "Max request size.",
                  "default" : "10MB"
                },
                "max-file-size" : {
                  "type" : "string"
                },
                "location" : {
                  "type" : "string",
                  "description" : "Intermediate location of uploaded files."
                },
                "strict-servlet-compliance" : {
                  "type" : "boolean"
                },
                "file-size-threshold" : {
                  "type" : "string"
                },
                "enabled" : {
                  "type" : "boolean"
                },
                "resolve-lazily" : {
                  "type" : "boolean",
                  "description" : "Whether to resolve the multipart request lazily at the time of file or parameter access.",
                  "default" : false
                }
              }
            }
          }
        },
        "webflux" : {
          "type" : "object",
          "properties" : {
            "static-path-pattern" : {
              "type" : "string",
              "description" : "Path pattern used for static resources.",
              "default" : "/**"
            },
            "webjars-path-pattern" : {
              "type" : "string",
              "description" : "Path pattern used for WebJar assets.",
              "default" : "/webjars/**"
            },
            "hiddenmethod" : {
              "type" : "object",
              "properties" : {
                "filter" : {
                  "type" : "object",
                  "properties" : {
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether to enable Spring's HiddenHttpMethodFilter.",
                      "default" : false
                    }
                  }
                }
              }
            },
            "multipart" : {
              "type" : "object",
              "properties" : {
                "file-storage-directory" : {
                  "type" : "string"
                },
                "max-in-memory-size" : {
                  "type" : "string"
                },
                "max-parts" : {
                  "type" : "integer"
                },
                "headers-charset" : {
                  "$ref" : "#/$defs/Charsets",
                  "properties" : {
                    "$ref" : "#/$defs/Charsets"
                  }
                },
                "max-headers-size" : {
                  "type" : "string"
                },
                "max-disk-usage-per-part" : {
                  "type" : "string"
                }
              }
            },
            "base-path" : {
              "type" : "string",
              "description" : "Base path for all web handlers."
            },
            "format" : {
              "type" : "object",
              "properties" : {
                "date" : {
                  "type" : "string",
                  "description" : "Date format to use, for example 'dd/MM/yyyy'. Used for formatting of java.util.Date and java.time.LocalDate.",
                  "examples" : [ "dd/MM/yyyy", "iso" ]
                },
                "date-time" : {
                  "type" : "string"
                },
                "time" : {
                  "type" : "string"
                }
              }
            },
            "problemdetails" : {
              "type" : "object",
              "properties" : {
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Whether RFC 9457 Problem Details support should be enabled.",
                  "default" : false
                }
              }
            }
          }
        },
        "jdbc" : {
          "type" : "object",
          "properties" : {
            "template" : {
              "type" : "object",
              "properties" : {
                "max-rows" : {
                  "type" : "integer"
                },
                "ignore-warnings" : {
                  "type" : "boolean",
                  "description" : "Whether to ignore JDBC statement warnings (SQLWarning). When set to false, throw an SQLWarningException instead.",
                  "default" : true
                },
                "skip-results-processing" : {
                  "type" : "boolean",
                  "description" : "Whether results processing should be skipped. Can be used to optimize callable statement processing when we know that no results are being passed back.",
                  "default" : false
                },
                "fetch-size" : {
                  "type" : "integer"
                },
                "results-map-case-insensitive" : {
                  "type" : "boolean"
                },
                "skip-undeclared-results" : {
                  "type" : "boolean",
                  "description" : "Whether undeclared results should be skipped.",
                  "default" : false
                },
                "query-timeout" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "ssl" : {
          "type" : "object",
          "properties" : {
            "bundle" : {
              "type" : "object",
              "properties" : {
                "jks" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object",
                    "properties" : {
                      "keystore" : {
                        "type" : "object",
                        "properties" : {
                          "password" : {
                            "type" : "string"
                          },
                          "provider" : {
                            "type" : "string"
                          },
                          "location" : {
                            "type" : "string"
                          },
                          "type" : {
                            "type" : "string"
                          }
                        }
                      },
                      "truststore" : {
                        "type" : "object",
                        "properties" : {
                          "password" : {
                            "type" : "string"
                          },
                          "provider" : {
                            "type" : "string"
                          },
                          "location" : {
                            "type" : "string"
                          },
                          "type" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                },
                "watch" : {
                  "type" : "object",
                  "properties" : {
                    "file" : {
                      "type" : "object",
                      "properties" : {
                        "quiet-period" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                },
                "pem" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object",
                    "properties" : {
                      "keystore" : {
                        "type" : "object",
                        "properties" : {
                          "verify-keys" : {
                            "type" : "boolean"
                          },
                          "private-key" : {
                            "type" : "string"
                          },
                          "certificate" : {
                            "type" : "string"
                          },
                          "private-key-password" : {
                            "type" : "string"
                          },
                          "type" : {
                            "type" : "string"
                          }
                        }
                      },
                      "truststore" : {
                        "type" : "object",
                        "properties" : {
                          "verify-keys" : {
                            "type" : "boolean"
                          },
                          "private-key" : {
                            "type" : "string"
                          },
                          "certificate" : {
                            "type" : "string"
                          },
                          "private-key-password" : {
                            "type" : "string"
                          },
                          "type" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "sql" : {
          "type" : "object",
          "properties" : {
            "init" : {
              "type" : "object",
              "properties" : {
                "mode" : {
                  "type" : "string",
                  "description" : "Mode to apply when determining whether initialization should be performed.",
                  "default" : "embedded",
                  "enum" : [ "ALWAYS", "always", "EMBEDDED", "embedded", "NEVER", "never" ]
                },
                "password" : {
                  "type" : "string",
                  "description" : "Password of the database to use when applying initialization scripts (if different)."
                },
                "schema-locations" : {
                  "type" : "array",
                  "description" : "Locations of the schema (DDL) scripts to apply to the database.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "data-locations" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "encoding" : {
                  "$ref" : "#/$defs/Charsets",
                  "description" : "Encoding of the schema and data scripts."
                },
                "separator" : {
                  "type" : "string"
                },
                "platform" : {
                  "type" : "string"
                },
                "username" : {
                  "type" : "string"
                },
                "continue-on-error" : {
                  "type" : "boolean",
                  "description" : "Whether initialization should continue when an error occurs.",
                  "default" : false
                }
              }
            }
          }
        },
        "cloud" : {
          "type" : "object",
          "properties" : {
            "discovery" : {
              "type" : "object",
              "properties" : {
                "client" : {
                  "type" : "object",
                  "properties" : {
                    "simple" : {
                      "type" : "object",
                      "properties" : {
                        "instances" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "object"
                          }
                        },
                        "local" : {
                          "type" : "object",
                          "properties" : {
                            "service-id" : {
                              "type" : "string"
                            },
                            "metadata" : {
                              "type" : "object",
                              "additionalProperties" : {
                                "type" : "string"
                              }
                            },
                            "port" : {
                              "type" : "integer"
                            },
                            "instance-id" : {
                              "type" : "string"
                            },
                            "host" : {
                              "type" : "string"
                            },
                            "secure" : {
                              "type" : "boolean",
                              "default" : false
                            },
                            "uri" : {
                              "type" : "string"
                            }
                          }
                        },
                        "order" : {
                          "type" : "integer"
                        }
                      }
                    },
                    "health-indicator" : {
                      "type" : "object",
                      "properties" : {
                        "include-description" : {
                          "type" : "boolean",
                          "default" : false
                        },
                        "use-services-query" : {
                          "type" : "boolean",
                          "description" : "Whether or not the indicator should use {@link DiscoveryClient#getServices} to check its health. When set to {@code false} the indicator instead uses the lighter {@link DiscoveryClient#probe()}. This can be helpful in large deployments where the number of services returned makes the operation unnecessarily heavy.",
                          "default" : true
                        },
                        "enabled" : {
                          "type" : "boolean",
                          "default" : true
                        }
                      }
                    }
                  }
                }
              }
            },
            "refresh" : {
              "type" : "object",
              "properties" : {
                "additional-property-sources-to-retain" : {
                  "type" : "array",
                  "description" : "Additional property sources to retain during a refresh. Typically only system property sources are retained. This property allows property sources, such as property sources created by EnvironmentPostProcessors to be retained as well.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "never-refreshable" : {
                  "type" : "string",
                  "description" : "Comma separated list of bean names or class names for beans to never be refreshed or rebound.",
                  "default" : true
                },
                "extra-refreshable" : {
                  "type" : "array",
                  "description" : "Additional bean names or class names for beans to post process into refresh scope.",
                  "default" : true,
                  "items" : {
                    "type" : "string"
                  }
                },
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Enables autoconfiguration for the refresh scope and associated features.",
                  "default" : "true"
                }
              }
            },
            "compatibility-verifier" : {
              "type" : "object",
              "properties" : {
                "compatible-boot-versions" : {
                  "type" : "array",
                  "description" : "Default accepted versions for the Spring Boot dependency. You can set {@code x} for the patch version if you don't want to specify a concrete value. Example: {@code 3.5.x}",
                  "default" : "3.5.x",
                  "items" : {
                    "type" : "string"
                  }
                },
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Enables creation of Spring Cloud compatibility verification.",
                  "default" : false
                }
              }
            },
            "inetutils" : {
              "type" : "object",
              "properties" : {
                "use-only-site-local-interfaces" : {
                  "type" : "boolean",
                  "description" : "Whether to use only interfaces with site local addresses. See {@link InetAddress#isSiteLocalAddress()} for more details.",
                  "default" : false
                },
                "preferred-networks" : {
                  "type" : "array",
                  "description" : "List of Java regular expressions for network addresses that will be preferred.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "timeout-seconds" : {
                  "type" : "integer",
                  "description" : "Timeout, in seconds, for calculating hostname.",
                  "default" : 1
                },
                "ignored-interfaces" : {
                  "type" : "array",
                  "description" : "List of Java regular expressions for network interfaces that will be ignored.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "default-hostname" : {
                  "type" : "string",
                  "description" : "The default hostname. Used in case of errors.",
                  "default" : "localhost"
                },
                "prefix" : {
                  "type" : "string"
                },
                "default-ip-address" : {
                  "type" : "string",
                  "description" : "The default IP address. Used in case of errors.",
                  "default" : "127.0.0.1"
                }
              }
            },
            "config" : {
              "type" : "object",
              "properties" : {
                "request-connect-timeout" : {
                  "type" : "integer",
                  "description" : "timeout on waiting to connect to the Config Server.",
                  "default" : 0
                },
                "charset" : {
                  "$ref" : "#/$defs/Charsets",
                  "description" : "The charset to read the resource from the config server.",
                  "default" : "UTF-8"
                },
                "config_discovery_enabled" : {
                  "type" : "string"
                },
                "default_application" : {
                  "type" : "string"
                },
                "prefix" : {
                  "type" : "string"
                },
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Flag to say that remote configuration is enabled. Default true;",
                  "default" : true
                },
                "send-state" : {
                  "type" : "boolean",
                  "description" : "Flag to indicate whether to send state. Default true.",
                  "default" : true
                },
                "authorization" : {
                  "type" : "string"
                },
                "password" : {
                  "type" : "string",
                  "description" : "The password to use (HTTP Basic) when contacting the remote server."
                },
                "fail-fast" : {
                  "type" : "boolean",
                  "description" : "Flag to indicate that failure to connect to the server is fatal (default false).",
                  "default" : false
                },
                "token_header" : {
                  "type" : "string"
                },
                "media-type" : {
                  "type" : "string"
                },
                "retry" : {
                  "type" : "object",
                  "properties" : {
                    "use-random-policy" : {
                      "type" : "boolean"
                    },
                    "max-interval" : {
                      "type" : "integer",
                      "description" : "Maximum interval for backoff.",
                      "default" : 2000
                    },
                    "prefix" : {
                      "type" : "string"
                    },
                    "multiplier" : {
                      "type" : "number"
                    },
                    "max-attempts" : {
                      "type" : "integer"
                    },
                    "initial-interval" : {
                      "type" : "integer",
                      "description" : "Initial retry interval in milliseconds.",
                      "default" : 1000
                    }
                  }
                },
                "send-all-labels" : {
                  "type" : "boolean",
                  "description" : "If set to true the client will send all labels to the server instead of sending one at a time. Support for this would require a config server version of 4.2.0 or higher.",
                  "default" : false
                },
                "headers" : {
                  "type" : "object",
                  "description" : "Additional headers used to create the client request.",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                },
                "profile" : {
                  "type" : "string",
                  "description" : "The default profile to use when fetching remote configuration (comma-separated). Default is \"default\".",
                  "default" : "default"
                },
                "label" : {
                  "type" : "string",
                  "description" : "The label name to use to pull remote configuration properties. The default is set on the server (generally \"main\" for a git based server)."
                },
                "uri" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "token" : {
                  "type" : "string",
                  "description" : "Security Token passed thru to underlying environment repository."
                },
                "override-none" : {
                  "type" : "boolean",
                  "description" : "Flag to indicate that when {@link #setAllowOverride(boolean) allowOverride} is true, external properties should take lowest priority and should not override any existing property sources (including local config files). Default false. This will only have an effect when using config first bootstrap.",
                  "default" : false
                },
                "discovery" : {
                  "type" : "object",
                  "properties" : {
                    "service-id" : {
                      "type" : "string",
                      "description" : "Service id to locate config server.",
                      "default" : "configserver"
                    },
                    "default_config_server" : {
                      "type" : "string"
                    },
                    "enabled" : {
                      "type" : "boolean"
                    }
                  }
                },
                "default_profile" : {
                  "type" : "string"
                },
                "request-read-timeout" : {
                  "type" : "integer",
                  "description" : "timeout on waiting to read data from the Config Server.",
                  "default" : 0
                },
                "name" : {
                  "type" : "string",
                  "description" : "Name of application used to fetch remote properties."
                },
                "multiple-uri-strategy" : {
                  "type" : "string",
                  "description" : "The strategy to use when call to server fails and there are multiple URLs configured on the uri property (default {@link MultipleUriStrategy#ALWAYS}).",
                  "default" : "always",
                  "enum" : [ "ALWAYS", "always", "CONNECTION_TIMEOUT_ONLY", "connection_timeout_only" ]
                },
                "name_placeholder" : {
                  "type" : "string"
                },
                "tls" : {
                  "type" : "object",
                  "description" : "TLS properties.",
                  "properties" : {
                    "default_store_type" : {
                      "type" : "string"
                    },
                    "key-store-type" : {
                      "type" : "string"
                    },
                    "trust-store" : {
                      "type" : "string"
                    },
                    "trust-store-type" : {
                      "type" : "string"
                    },
                    "extension_store_types" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "string"
                      }
                    },
                    "key-store" : {
                      "type" : "string"
                    },
                    "key-password" : {
                      "type" : "string"
                    },
                    "enabled" : {
                      "type" : "boolean"
                    },
                    "key-store-password" : {
                      "type" : "string"
                    },
                    "trust-store-password" : {
                      "type" : "string"
                    }
                  }
                },
                "state_header" : {
                  "type" : "string"
                },
                "initialize-on-context-refresh" : {
                  "type" : "boolean",
                  "description" : "Flag to initialize bootstrap configuration on context refresh event. Default false.",
                  "default" : false
                },
                "username" : {
                  "type" : "string",
                  "description" : "The username to use (HTTP Basic) when contacting the remote server."
                }
              }
            },
            "service-registry" : {
              "type" : "object",
              "properties" : {
                "auto-registration" : {
                  "type" : "object",
                  "properties" : {
                    "fail-fast" : {
                      "type" : "boolean",
                      "description" : "Whether startup fails if there is no AutoServiceRegistration. Defaults to false.",
                      "default" : false
                    },
                    "register-management" : {
                      "type" : "boolean"
                    },
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether service auto-registration is enabled. Defaults to true.",
                      "default" : true
                    }
                  }
                }
              }
            }
          }
        },
        "lifecycle" : {
          "type" : "object",
          "properties" : {
            "timeout-per-shutdown-phase" : {
              "type" : "string"
            }
          }
        },
        "jackson" : {
          "type" : "object",
          "properties" : {
            "visibility" : {
              "type" : "object",
              "description" : "Jackson visibility thresholds that can be used to limit which methods (and fields) are auto-detected.",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "generator" : {
              "type" : "object",
              "description" : "Jackson on/off features for generators.",
              "additionalProperties" : {
                "type" : "boolean"
              }
            },
            "mapper" : {
              "type" : "object",
              "description" : "Jackson general purpose on/off features.",
              "additionalProperties" : {
                "type" : "boolean"
              }
            },
            "locale" : {
              "$ref" : "#/$defs/Locales",
              "description" : "Locale used for formatting."
            },
            "date-format" : {
              "type" : "string",
              "description" : "Date format string or a fully-qualified date format class name. For instance, 'yyyy-MM-dd HH:mm:ss'."
            },
            "property-naming-strategy" : {
              "type" : "string",
              "description" : "One of the constants on Jackson's PropertyNamingStrategies. Can also be a fully-qualified class name of a PropertyNamingStrategy implementation."
            },
            "serialization" : {
              "type" : "object",
              "description" : "Jackson on/off features that affect the way Java objects are serialized.",
              "additionalProperties" : {
                "type" : "boolean"
              }
            },
            "constructor-detector" : {
              "type" : "string",
              "description" : "Strategy to use to auto-detect constructor, and in particular behavior with single-argument constructors.",
              "default" : "default",
              "enum" : [ "DEFAULT", "default", "USE_PROPERTIES_BASED", "use_properties_based", "USE_DELEGATING", "use_delegating", "EXPLICIT_ONLY", "explicit_only" ]
            },
            "parser" : {
              "type" : "object",
              "description" : "Jackson on/off features for parsers.",
              "additionalProperties" : {
                "type" : "boolean"
              }
            },
            "default-leniency" : {
              "type" : "boolean",
              "description" : "Global default setting (if any) for leniency."
            },
            "datatype" : {
              "type" : "object",
              "properties" : {
                "json-node" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "boolean"
                  }
                },
                "enum-features" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "default-property-inclusion" : {
              "type" : "string",
              "description" : "Controls the inclusion of properties during serialization. Configured with one of the values in Jackson's JsonInclude.Include enumeration.",
              "enum" : [ "ALWAYS", "always", "NON_NULL", "non_null", "NON_ABSENT", "non_absent", "NON_EMPTY", "non_empty", "NON_DEFAULT", "non_default", "CUSTOM", "custom", "USE_DEFAULTS", "use_defaults" ]
            },
            "deserialization" : {
              "type" : "object",
              "description" : "Jackson on/off features that affect the way Java objects are deserialized.",
              "additionalProperties" : {
                "type" : "boolean"
              }
            },
            "time-zone" : {
              "type" : "string",
              "description" : "Time zone used when formatting dates. For instance, \"America/Los_Angeles\" or \"GMT+10\"."
            }
          }
        },
        "task" : {
          "type" : "object",
          "properties" : {
            "execution" : {
              "type" : "object",
              "properties" : {
                "mode" : {
                  "type" : "string",
                  "description" : "Determine when the task executor is to be created.",
                  "default" : "auto",
                  "enum" : [ "AUTO", "auto", "FORCE", "force" ]
                },
                "thread-name-prefix" : {
                  "type" : "string",
                  "description" : "Prefix to use for the names of newly created threads.",
                  "default" : "task-"
                },
                "pool" : {
                  "type" : "object",
                  "properties" : {
                    "keep-alive" : {
                      "type" : "string",
                      "description" : "Time limit for which threads may remain idle before being terminated. Doesn't have an effect if virtual threads are enabled.",
                      "default" : "60s"
                    },
                    "core-size" : {
                      "type" : "integer",
                      "description" : "Core number of threads. Doesn't have an effect if virtual threads are enabled.",
                      "default" : 8
                    },
                    "max-size" : {
                      "type" : "integer"
                    },
                    "queue-capacity" : {
                      "type" : "integer",
                      "description" : "Queue capacity. An unbounded capacity does not increase the pool and therefore ignores the \"max-size\" property. Doesn't have an effect if virtual threads are enabled."
                    },
                    "allow-core-thread-timeout" : {
                      "type" : "boolean",
                      "description" : "Whether core threads are allowed to time out. This enables dynamic growing and shrinking of the pool. Doesn't have an effect if virtual threads are enabled.",
                      "default" : true
                    },
                    "shutdown" : {
                      "type" : "object",
                      "properties" : {
                        "accept-tasks-after-context-close" : {
                          "type" : "boolean"
                        }
                      }
                    }
                  }
                },
                "simple" : {
                  "type" : "object",
                  "properties" : {
                    "concurrency-limit" : {
                      "type" : "integer"
                    },
                    "reject-tasks-when-limit-reached" : {
                      "type" : "boolean"
                    }
                  }
                },
                "shutdown" : {
                  "type" : "object",
                  "properties" : {
                    "await-termination-period" : {
                      "type" : "string",
                      "description" : "Maximum time the executor should wait for remaining tasks to complete."
                    },
                    "await-termination" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            },
            "scheduling" : {
              "type" : "object",
              "properties" : {
                "thread-name-prefix" : {
                  "type" : "string"
                },
                "pool" : {
                  "type" : "object",
                  "properties" : {
                    "size" : {
                      "type" : "integer",
                      "description" : "Maximum allowed number of threads. Doesn't have an effect if virtual threads are enabled.",
                      "default" : 1
                    }
                  }
                },
                "simple" : {
                  "type" : "object",
                  "properties" : {
                    "concurrency-limit" : {
                      "type" : "integer"
                    }
                  }
                },
                "shutdown" : {
                  "type" : "object",
                  "properties" : {
                    "await-termination-period" : {
                      "type" : "string"
                    },
                    "await-termination" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "jmx" : {
          "type" : "object",
          "properties" : {
            "enabled" : {
              "type" : "boolean",
              "description" : "Expose Spring's management beans to the JMX domain.",
              "default" : false
            }
          }
        },
        "web" : {
          "type" : "object",
          "properties" : {
            "locale-resolver" : {
              "type" : "string"
            },
            "resources" : {
              "type" : "object",
              "properties" : {
                "chain" : {
                  "type" : "object",
                  "properties" : {
                    "cache" : {
                      "type" : "boolean"
                    },
                    "customized" : {
                      "type" : "boolean"
                    },
                    "compressed" : {
                      "type" : "boolean",
                      "description" : "Whether to enable resolution of already compressed resources (gzip, brotli). Checks for a resource name with the '.gz' or '.br' file extensions.",
                      "default" : false
                    },
                    "strategy" : {
                      "type" : "object",
                      "properties" : {
                        "fixed" : {
                          "type" : "object",
                          "properties" : {
                            "customized" : {
                              "type" : "boolean"
                            },
                            "paths" : {
                              "type" : "array",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "version" : {
                              "type" : "string"
                            },
                            "enabled" : {
                              "type" : "boolean"
                            }
                          }
                        },
                        "content" : {
                          "type" : "object",
                          "properties" : {
                            "customized" : {
                              "type" : "boolean"
                            },
                            "paths" : {
                              "type" : "array",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "enabled" : {
                              "type" : "boolean",
                              "description" : "Whether to enable the content Version Strategy.",
                              "default" : false
                            }
                          }
                        }
                      }
                    },
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether to enable the Spring Resource Handling chain. By default, disabled unless at least one strategy has been enabled."
                    }
                  }
                },
                "cache" : {
                  "type" : "object",
                  "properties" : {
                    "period" : {
                      "type" : "string"
                    },
                    "customized" : {
                      "type" : "boolean"
                    },
                    "cachecontrol" : {
                      "type" : "object",
                      "properties" : {
                        "cache-private" : {
                          "type" : "boolean"
                        },
                        "customized" : {
                          "type" : "boolean"
                        },
                        "no-transform" : {
                          "type" : "boolean",
                          "description" : "Indicate intermediaries (caches and others) that they should not transform the response content."
                        },
                        "max-age" : {
                          "type" : "string",
                          "description" : "Maximum time the response should be cached, in seconds if no duration suffix is not specified."
                        },
                        "no-cache" : {
                          "type" : "boolean"
                        },
                        "must-revalidate" : {
                          "type" : "boolean"
                        },
                        "proxy-revalidate" : {
                          "type" : "boolean",
                          "description" : "Same meaning as the \"must-revalidate\" directive, except that it does not apply to private caches."
                        },
                        "s-max-age" : {
                          "type" : "string"
                        },
                        "stale-if-error" : {
                          "type" : "string"
                        },
                        "no-store" : {
                          "type" : "boolean",
                          "description" : "Indicate to not cache the response in any case."
                        },
                        "cache-public" : {
                          "type" : "boolean"
                        },
                        "stale-while-revalidate" : {
                          "type" : "string",
                          "description" : "Maximum time the response can be served after it becomes stale, in seconds if no duration suffix is not specified."
                        }
                      }
                    },
                    "use-last-modified" : {
                      "type" : "boolean"
                    }
                  }
                },
                "classpath_resource_locations" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "customized" : {
                  "type" : "boolean"
                },
                "add-mappings" : {
                  "type" : "boolean"
                },
                "static-locations" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "locale" : {
              "$ref" : "#/$defs/Locales",
              "properties" : {
                "$ref" : "#/$defs/Locales"
              }
            }
          }
        },
        "datasource" : {
          "type" : "object",
          "properties" : {
            "tomcat" : {
              "type" : "object",
              "properties" : {
                "db-properties" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                },
                "use-equals" : {
                  "type" : "boolean"
                },
                "time-between-eviction-runs-millis" : {
                  "type" : "integer"
                },
                "ignore-exception-on-pre-load" : {
                  "type" : "boolean"
                }
              }
            },
            "dbcp2" : {
              "type" : "string",
              "properties" : {
                "max-wait-millis" : {
                  "type" : "integer",
                  "deprecated" : true
                }
              }
            },
            "xa" : {
              "type" : "object",
              "properties" : {
                "data-source-class-name" : {
                  "type" : "string"
                },
                "properties" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            },
            "type" : {
              "type" : "string"
            },
            "unique-name" : {
              "type" : "string"
            },
            "url" : {
              "type" : "string"
            },
            "jndi-name" : {
              "type" : "string"
            },
            "password" : {
              "type" : "string"
            },
            "generate-unique-name" : {
              "type" : "boolean",
              "description" : "Whether to generate a random datasource name.",
              "default" : true
            },
            "name" : {
              "type" : "string"
            },
            "oracleucp" : {
              "type" : "object",
              "properties" : {
                "min-idle" : {
                  "type" : "integer"
                },
                "login-timeout" : {
                  "type" : "integer"
                },
                "role-name" : {
                  "type" : "string"
                },
                "pdb-roles" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                },
                "validate-connection-on-borrow" : {
                  "type" : "boolean"
                },
                "connection-labeling-high-cost" : {
                  "type" : "integer"
                }
              }
            },
            "class-loader" : {
              "type" : "string"
            },
            "embedded-database-connection" : {
              "type" : "string"
            },
            "driver-class-name" : {
              "type" : "string",
              "description" : "Fully qualified name of the JDBC driver. Auto-detected based on the URL by default."
            },
            "username" : {
              "type" : "string"
            },
            "hikari" : {
              "type" : "object",
              "properties" : {
                "max-lifetime" : {
                  "type" : "integer"
                },
                "pool-name" : {
                  "type" : "string"
                },
                "minimum-idle" : {
                  "type" : "integer"
                },
                "exception-override-class-name" : {
                  "type" : "string"
                },
                "initialization-fail-timeout" : {
                  "type" : "integer"
                },
                "connection-init-sql" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "http" : {
          "type" : "object",
          "properties" : {
            "client" : {
              "type" : "object",
              "properties" : { }
            }
          }
        },
        "jpa" : {
          "type" : "object",
          "properties" : {
            "database" : {
              "type" : "string",
              "description" : "Target database to operate on, auto-detected by default. Can be alternatively set using the \"databasePlatform\" property.",
              "enum" : [ "DEFAULT", "default", "DB2", "db2", "DERBY", "derby", "H2", "h2", "HANA", "hana", "HSQL", "hsql", "INFORMIX", "informix", "MYSQL", "mysql", "ORACLE", "oracle", "POSTGRESQL", "postgresql", "SQL_SERVER", "sql_server", "SYBASE", "sybase" ]
            },
            "show-sql" : {
              "type" : "boolean",
              "description" : "Whether to enable logging of SQL statements.",
              "default" : false
            },
            "open-in-view" : {
              "type" : "boolean",
              "description" : "Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.",
              "default" : true
            },
            "generate-ddl" : {
              "type" : "boolean",
              "description" : "Whether to initialize the schema on startup.",
              "default" : false
            },
            "hibernate" : {
              "type" : "object",
              "properties" : {
                "naming" : {
                  "type" : "object",
                  "properties" : {
                    "implicit-strategy" : {
                      "type" : "string",
                      "description" : "Fully qualified name of the implicit naming strategy."
                    },
                    "physical-strategy" : {
                      "type" : "string"
                    }
                  }
                },
                "ddl-auto" : {
                  "type" : "string"
                },
                "disabled_scanner_class" : {
                  "type" : "string"
                }
              }
            },
            "mapping-resources" : {
              "type" : "array",
              "description" : "Mapping resources (equivalent to \"mapping-file\" entries in persistence.xml).",
              "items" : {
                "type" : "string"
              }
            },
            "database-platform" : {
              "type" : "string",
              "description" : "Name of the target database to operate on, auto-detected by default. Can be alternatively set using the \"Database\" enum."
            },
            "properties" : {
              "type" : "object",
              "description" : "Additional native properties to set on the JPA provider.",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        },
        "mvc" : {
          "type" : "object",
          "properties" : {
            "static-path-pattern" : {
              "type" : "string",
              "description" : "Path pattern used for static resources.",
              "default" : "/**"
            },
            "webjars-path-pattern" : {
              "type" : "string"
            },
            "dispatch-options-request" : {
              "type" : "boolean"
            },
            "contentnegotiation" : {
              "type" : "object",
              "properties" : {
                "media-types" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                },
                "parameter-name" : {
                  "type" : "string"
                },
                "default-content-types" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "favor-parameter" : {
                  "type" : "boolean",
                  "description" : "Whether a request parameter (\"format\" by default) should be used to determine the requested media type.",
                  "default" : false
                }
              }
            },
            "hiddenmethod" : {
              "type" : "object",
              "properties" : {
                "filter" : {
                  "type" : "object",
                  "properties" : {
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether to enable Spring's HiddenHttpMethodFilter.",
                      "default" : false
                    }
                  }
                }
              }
            },
            "servlet" : {
              "type" : "object",
              "properties" : {
                "path" : {
                  "type" : "string"
                },
                "load-on-startup" : {
                  "type" : "integer"
                }
              }
            },
            "message-codes-resolver-format" : {
              "type" : "string",
              "description" : "Formatting strategy for message codes. For instance, 'PREFIX_ERROR_CODE'.",
              "enum" : [ "PREFIX_ERROR_CODE", "prefix_error_code", "POSTFIX_ERROR_CODE", "postfix_error_code" ]
            },
            "format" : {
              "type" : "object",
              "properties" : {
                "date" : {
                  "type" : "string",
                  "description" : "Date format to use, for example 'dd/MM/yyyy'. Used for formatting of java.util.Date and java.time.LocalDate.",
                  "examples" : [ "dd/MM/yyyy", "iso" ]
                },
                "date-time" : {
                  "type" : "string",
                  "description" : "Date-time format to use, for example 'yyyy-MM-dd HH:mm:ss'. Used for formatting of java.time's LocalDateTime, OffsetDateTime, and ZonedDateTime.",
                  "examples" : [ "yyyy-MM-dd HH:mm:ss", "iso", "iso-offset" ]
                },
                "time" : {
                  "type" : "string"
                }
              }
            },
            "publish-request-handled-events" : {
              "type" : "boolean"
            },
            "problemdetails" : {
              "type" : "object",
              "properties" : {
                "enabled" : {
                  "type" : "boolean"
                }
              }
            },
            "log-resolved-exception" : {
              "type" : "boolean"
            },
            "async" : {
              "type" : "object",
              "properties" : {
                "request-timeout" : {
                  "type" : "string"
                }
              }
            },
            "view" : {
              "type" : "object",
              "properties" : {
                "prefix" : {
                  "type" : "string"
                },
                "suffix" : {
                  "type" : "string"
                }
              }
            },
            "dispatch-trace-request" : {
              "type" : "boolean"
            },
            "log-request-details" : {
              "type" : "boolean",
              "description" : "Whether logging of (potentially sensitive) request details at DEBUG and TRACE level is allowed.",
              "default" : false
            },
            "pathmatch" : {
              "type" : "object",
              "properties" : {
                "matching-strategy" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "transaction" : {
          "type" : "object",
          "properties" : {
            "default-timeout" : {
              "type" : "string",
              "description" : "Default transaction timeout. If a duration suffix is not specified, seconds will be used."
            },
            "rollback-on-commit-failure" : {
              "type" : "boolean",
              "description" : "Whether to roll back on commit failures."
            }
          }
        },
        "info" : {
          "type" : "object",
          "properties" : {
            "git" : {
              "type" : "object",
              "properties" : {
                "location" : {
                  "type" : "string"
                },
                "encoding" : {
                  "$ref" : "#/$defs/Charsets",
                  "properties" : {
                    "$ref" : "#/$defs/Charsets"
                  }
                }
              }
            },
            "build" : {
              "type" : "object",
              "properties" : {
                "location" : {
                  "type" : "string"
                },
                "encoding" : {
                  "$ref" : "#/$defs/Charsets",
                  "properties" : {
                    "$ref" : "#/$defs/Charsets"
                  }
                }
              }
            }
          }
        }
      }
    },
    "server" : {
      "type" : "object",
      "properties" : {
        "mime-mappings" : {
          "type" : "object",
          "properties" : {
            "default" : {
              "type" : "object",
              "properties" : { }
            },
            "map" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : {
                  "extension" : {
                    "type" : "string"
                  },
                  "mime-type" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "server-header" : {
          "type" : "string",
          "description" : "Value to use for the Server response header (if empty, no header is sent)."
        },
        "address" : {
          "type" : "string"
        },
        "undertow" : {
          "type" : "object",
          "properties" : {
            "no-request-timeout" : {
              "type" : "string",
              "description" : "Amount of time a connection can sit idle without processing a request, before it is closed by the server."
            },
            "direct-buffers" : {
              "type" : "boolean",
              "description" : "Whether to allocate buffers outside the Java heap. The default is derived from the maximum amount of memory that is available to the JVM."
            },
            "eager-filter-init" : {
              "type" : "boolean"
            },
            "preserve-path-on-forward" : {
              "type" : "boolean"
            },
            "buffer-size" : {
              "type" : "string"
            },
            "threads" : {
              "type" : "object",
              "properties" : {
                "io" : {
                  "type" : "integer"
                },
                "worker" : {
                  "type" : "integer",
                  "description" : "Number of worker threads. The default is 8 times the number of I/O threads."
                }
              }
            },
            "max-http-post-size" : {
              "type" : "string"
            },
            "accesslog" : {
              "type" : "object",
              "properties" : {
                "rotate" : {
                  "type" : "boolean"
                },
                "prefix" : {
                  "type" : "string"
                },
                "pattern" : {
                  "type" : "string"
                },
                "suffix" : {
                  "type" : "string"
                },
                "dir" : {
                  "type" : "string"
                },
                "enabled" : {
                  "type" : "boolean"
                }
              }
            },
            "decode-slash" : {
              "type" : "boolean",
              "description" : "Whether encoded slash characters (%2F) should be decoded. Decoding can cause security problems if a front-end proxy does not perform the same decoding. Only enable this if you have a legacy application that requires it. When set, server.undertow.allow-encoded-slash has no effect."
            },
            "decode-url" : {
              "type" : "boolean"
            },
            "url-charset" : {
              "$ref" : "#/$defs/Charsets",
              "properties" : {
                "$ref" : "#/$defs/Charsets"
              }
            },
            "max-parameters" : {
              "type" : "integer"
            },
            "max-cookies" : {
              "type" : "integer"
            },
            "options" : {
              "type" : "object",
              "properties" : {
                "server" : {
                  "type" : "object",
                  "description" : "Server options as defined in io.undertow.UndertowOptions.",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                },
                "socket" : {
                  "type" : "object",
                  "description" : "Socket options as defined in org.xnio.Options.",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            },
            "max-headers" : {
              "type" : "integer"
            },
            "allow-encoded-slash" : {
              "type" : "boolean"
            },
            "always-set-keep-alive" : {
              "type" : "boolean",
              "description" : "Whether the 'Connection: keep-alive' header should be added to all responses, even if not required by the HTTP specification.",
              "default" : true
            }
          }
        },
        "tomcat" : {
          "type" : "object",
          "properties" : {
            "remoteip" : {
              "type" : "object",
              "properties" : {
                "remote-ip-header" : {
                  "type" : "string"
                },
                "host-header" : {
                  "type" : "string",
                  "description" : "Name of the HTTP header from which the remote host is extracted.",
                  "default" : "X-Forwarded-Host"
                },
                "trusted-proxies" : {
                  "type" : "string"
                },
                "internal-proxies" : {
                  "type" : "string"
                },
                "protocol-header" : {
                  "type" : "string"
                },
                "protocol-header-https-value" : {
                  "type" : "string"
                },
                "port-header" : {
                  "type" : "string"
                }
              }
            },
            "use-apr" : {
              "type" : "string"
            },
            "mbeanregistry" : {
              "type" : "object",
              "properties" : {
                "enabled" : {
                  "type" : "boolean"
                }
              }
            },
            "processor-cache" : {
              "type" : "integer"
            },
            "max-connections" : {
              "type" : "integer"
            },
            "accesslog" : {
              "type" : "object",
              "properties" : {
                "rotate" : {
                  "type" : "boolean"
                },
                "rename-on-rotate" : {
                  "type" : "boolean"
                },
                "request-attributes-enabled" : {
                  "type" : "boolean"
                },
                "prefix" : {
                  "type" : "string"
                },
                "pattern" : {
                  "type" : "string",
                  "description" : "Format pattern for access logs.",
                  "default" : "common"
                },
                "check-exists" : {
                  "type" : "boolean"
                },
                "max-days" : {
                  "type" : "integer"
                },
                "suffix" : {
                  "type" : "string"
                },
                "encoding" : {
                  "type" : "string"
                },
                "locale" : {
                  "type" : "string"
                },
                "directory" : {
                  "type" : "string"
                },
                "enabled" : {
                  "type" : "boolean"
                },
                "ipv6canonical" : {
                  "type" : "boolean"
                },
                "file-date-format" : {
                  "type" : "string",
                  "description" : "Date format to place in the log file name.",
                  "default" : ".yyyy-MM-dd"
                },
                "condition-unless" : {
                  "type" : "string"
                },
                "buffered" : {
                  "type" : "boolean"
                },
                "condition-if" : {
                  "type" : "string"
                }
              }
            },
            "max-http-form-post-size" : {
              "type" : "string"
            },
            "keep-alive-timeout" : {
              "type" : "string"
            },
            "relaxed-query-chars" : {
              "type" : "array",
              "description" : "List of additional unencoded characters that should be allowed in URI query strings. Only \"< > [ \\ ] ^ ` { | }\" are allowed.",
              "examples" : [ "<", ">", "[", "\\", "]", "^", "`", "{", "|", "}" ],
              "items" : {
                "type" : "string"
              }
            },
            "max-http-response-header-size" : {
              "type" : "string"
            },
            "max-part-count" : {
              "type" : "integer"
            },
            "additional-tld-skip-patterns" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "accept-count" : {
              "type" : "integer"
            },
            "relaxed-path-chars" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "resource" : {
              "type" : "object",
              "properties" : {
                "allow-caching" : {
                  "type" : "boolean"
                },
                "cache-ttl" : {
                  "type" : "string"
                }
              }
            },
            "max-keep-alive-requests" : {
              "type" : "integer",
              "description" : "Maximum number of HTTP requests that can be pipelined before the connection is closed. When set to 0 or 1, keep-alive and pipelining are disabled. When set to -1, an unlimited number of pipelined or keep-alive requests are allowed.",
              "default" : 100
            },
            "threads" : {
              "type" : "object",
              "properties" : {
                "min-spare" : {
                  "type" : "integer"
                },
                "max" : {
                  "type" : "integer"
                },
                "max-queue-capacity" : {
                  "type" : "integer"
                }
              }
            },
            "max-part-header-size" : {
              "type" : "string"
            },
            "max-swallow-size" : {
              "type" : "string"
            },
            "redirect-context-root" : {
              "type" : "boolean"
            },
            "basedir" : {
              "type" : "string"
            },
            "connection-timeout" : {
              "type" : "string"
            },
            "use-relative-redirects" : {
              "type" : "boolean"
            },
            "max-parameter-count" : {
              "type" : "integer"
            },
            "uri-encoding" : {
              "$ref" : "#/$defs/Charsets",
              "properties" : {
                "$ref" : "#/$defs/Charsets"
              }
            },
            "background-processor-delay" : {
              "type" : "string"
            }
          }
        },
        "servlet" : {
          "type" : "object",
          "properties" : {
            "context-path" : {
              "type" : "string",
              "description" : "Context path of the application."
            },
            "application-display-name" : {
              "type" : "string",
              "description" : "Display name of the application.",
              "default" : "application"
            },
            "jsp" : {
              "type" : "object",
              "properties" : {
                "init-parameters" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                },
                "registered" : {
                  "type" : "boolean"
                },
                "class-name" : {
                  "type" : "string",
                  "description" : "Class name of the servlet to use for JSPs. If registered is true and this class\n\t * is on the classpath then it will be registered.",
                  "default" : "org.apache.jasper.servlet.JspServlet"
                }
              }
            },
            "session" : {
              "type" : "object",
              "properties" : {
                "tracking-modes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "enum" : [ "COOKIE", "cookie", "URL", "url", "SSL", "ssl" ]
                  }
                },
                "cookie" : {
                  "type" : "object",
                  "properties" : {
                    "http-only" : {
                      "type" : "boolean",
                      "description" : "Whether to use \"HttpOnly\" cookies for the cookie."
                    },
                    "max-age" : {
                      "type" : "string",
                      "description" : "Maximum age of the cookie. If a duration suffix is not specified, seconds will be used. A positive value indicates when the cookie expires relative to the current time. A value of 0 means the cookie should expire immediately. A negative value means no \"Max-Age\"."
                    },
                    "secure" : {
                      "type" : "boolean",
                      "description" : "Whether to always mark the cookie as secure."
                    }
                  }
                },
                "store-dir" : {
                  "type" : "string"
                },
                "persistent" : {
                  "type" : "boolean"
                },
                "session-store-directory" : {
                  "type" : "object",
                  "properties" : {
                    "directory" : {
                      "type" : "string"
                    }
                  }
                },
                "timeout" : {
                  "type" : "string",
                  "description" : "Session timeout. If a duration suffix is not specified, seconds will be used.",
                  "default" : "30m"
                }
              }
            },
            "context-parameters" : {
              "type" : "object",
              "description" : "Servlet context init parameters.",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "register-default-servlet" : {
              "type" : "boolean"
            },
            "encoding" : {
              "type" : "object",
              "properties" : {
                "force-request" : {
                  "type" : "boolean"
                },
                "force-response" : {
                  "type" : "boolean"
                },
                "charset" : {
                  "$ref" : "#/$defs/Charsets",
                  "properties" : {
                    "$ref" : "#/$defs/Charsets"
                  }
                },
                "mapping" : {
                  "type" : "object",
                  "$ref" : "#/$defs/Charsets"
                },
                "default_charset" : {
                  "$ref" : "#/$defs/Charsets",
                  "properties" : {
                    "$ref" : "#/$defs/Charsets"
                  }
                },
                "force" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "error" : {
          "type" : "object",
          "properties" : {
            "path" : {
              "type" : "string"
            },
            "include-exception" : {
              "type" : "boolean"
            },
            "include-binding-errors" : {
              "type" : "string"
            },
            "include-stacktrace" : {
              "type" : "string"
            },
            "include-message" : {
              "type" : "string"
            },
            "whitelabel" : {
              "type" : "object",
              "properties" : {
                "enabled" : {
                  "type" : "boolean"
                }
              }
            },
            "include-path" : {
              "type" : "string"
            }
          }
        },
        "ssl" : {
          "type" : "object",
          "properties" : {
            "certificate-private-key" : {
              "type" : "string"
            },
            "trust-store" : {
              "type" : "string"
            },
            "certificate" : {
              "type" : "string"
            },
            "server-name-bundles" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "server-name" : {
                    "type" : "string"
                  },
                  "bundle" : {
                    "type" : "string"
                  }
                }
              }
            },
            "key-password" : {
              "type" : "string"
            },
            "key-store" : {
              "type" : "string"
            },
            "trust-certificate" : {
              "type" : "string"
            },
            "enabled" : {
              "type" : "boolean"
            },
            "key-store-provider" : {
              "type" : "string"
            },
            "trust-store-provider" : {
              "type" : "string"
            },
            "enabled-protocols" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "trust-certificate-private-key" : {
              "type" : "string"
            },
            "protocol" : {
              "type" : "string"
            },
            "key-alias" : {
              "type" : "string"
            },
            "client-auth" : {
              "type" : "string"
            },
            "key-store-type" : {
              "type" : "string"
            },
            "trust-store-type" : {
              "type" : "string"
            },
            "ciphers" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "bundle" : {
              "type" : "string"
            },
            "key-store-password" : {
              "type" : "string"
            },
            "trust-store-password" : {
              "type" : "string"
            }
          }
        },
        "reactive" : {
          "type" : "object",
          "properties" : {
            "session" : {
              "type" : "object",
              "properties" : {
                "cookie" : {
                  "type" : "object",
                  "properties" : {
                    "path" : {
                      "type" : "string"
                    },
                    "http-only" : {
                      "type" : "boolean",
                      "description" : "Whether to use \"HttpOnly\" cookies for the cookie."
                    },
                    "domain" : {
                      "type" : "string",
                      "description" : "Domain for the cookie."
                    },
                    "name" : {
                      "type" : "string"
                    },
                    "max-age" : {
                      "type" : "string"
                    },
                    "partitioned" : {
                      "type" : "boolean"
                    },
                    "secure" : {
                      "type" : "boolean"
                    },
                    "same-site" : {
                      "type" : "string"
                    }
                  }
                },
                "max-sessions" : {
                  "type" : "integer"
                },
                "timeout" : {
                  "type" : "string",
                  "description" : "Session timeout. If a duration suffix is not specified, seconds will be used.",
                  "default" : "30m"
                }
              }
            }
          }
        },
        "port" : {
          "type" : "integer"
        },
        "http2" : {
          "type" : "object",
          "properties" : {
            "enabled" : {
              "type" : "boolean"
            }
          }
        },
        "jetty" : {
          "type" : "object",
          "properties" : {
            "max-http-form-post-size" : {
              "type" : "string"
            },
            "connection-idle-timeout" : {
              "type" : "string"
            },
            "max-http-response-header-size" : {
              "type" : "string"
            },
            "threads" : {
              "type" : "object",
              "properties" : {
                "min" : {
                  "type" : "integer"
                },
                "max" : {
                  "type" : "integer"
                },
                "max-queue-capacity" : {
                  "type" : "integer",
                  "description" : "Maximum capacity of the thread pool's backing queue. A default is computed based on the threading configuration."
                },
                "idle-timeout" : {
                  "type" : "string"
                },
                "selectors" : {
                  "type" : "integer"
                },
                "acceptors" : {
                  "type" : "integer",
                  "description" : "Number of acceptor threads to use. When the value is -1, the default, the number of acceptors is derived from the operating environment.",
                  "default" : -1
                }
              }
            },
            "max-connections" : {
              "type" : "integer"
            },
            "max-form-keys" : {
              "type" : "integer"
            },
            "accesslog" : {
              "type" : "object",
              "properties" : {
                "file-date-format" : {
                  "type" : "string"
                },
                "filename" : {
                  "type" : "string"
                },
                "retention-period" : {
                  "type" : "integer"
                },
                "custom-format" : {
                  "type" : "string"
                },
                "format" : {
                  "type" : "string"
                },
                "ignore-paths" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "enabled" : {
                  "type" : "boolean"
                },
                "append" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "compression" : {
          "type" : "object",
          "properties" : {
            "mime-types" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "excluded-user-agents" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "enabled" : {
              "type" : "boolean"
            },
            "min-response-size" : {
              "type" : "string"
            }
          }
        },
        "forward-headers-strategy" : {
          "type" : "string"
        },
        "shutdown" : {
          "type" : "string"
        },
        "max-http-request-header-size" : {
          "type" : "string"
        },
        "netty" : {
          "type" : "object",
          "properties" : {
            "connection-timeout" : {
              "type" : "string"
            },
            "initial-buffer-size" : {
              "type" : "string",
              "description" : "Initial buffer size for HTTP request decoding.",
              "default" : "128B"
            },
            "validate-headers" : {
              "type" : "boolean",
              "description" : "Whether to validate headers when decoding requests.",
              "default" : true
            },
            "h2c-max-content-length" : {
              "type" : "string"
            },
            "max-initial-line-length" : {
              "type" : "string"
            },
            "max-keep-alive-requests" : {
              "type" : "integer",
              "description" : "Maximum number of requests that can be made per connection. By default, a connection serves unlimited number of requests."
            },
            "idle-timeout" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "management" : {
      "type" : "object",
      "properties" : {
        "server" : {
          "type" : "object",
          "properties" : {
            "address" : {
              "type" : "string",
              "description" : "Network address to which the management endpoints should bind. Requires a custom management.server.port."
            },
            "undertow" : {
              "type" : "object",
              "properties" : {
                "accesslog" : {
                  "type" : "object",
                  "properties" : {
                    "prefix" : {
                      "type" : "string",
                      "description" : "Management log file name prefix.",
                      "default" : "management_"
                    }
                  }
                }
              }
            },
            "port" : {
              "type" : "integer",
              "description" : "Management endpoint HTTP port (uses the same port as the application by default). Configure a different port to use management-specific SSL."
            },
            "tomcat" : {
              "type" : "object",
              "properties" : {
                "accesslog" : {
                  "type" : "object",
                  "properties" : {
                    "prefix" : {
                      "type" : "string",
                      "description" : "Management log file name prefix.",
                      "default" : "management_"
                    }
                  }
                }
              }
            },
            "servlet" : {
              "type" : "object",
              "properties" : { }
            },
            "base-path" : {
              "type" : "string",
              "description" : "Management endpoint base path (for instance, '/management'). Requires a custom management.server.port.",
              "default" : ""
            },
            "jetty" : {
              "type" : "object",
              "properties" : {
                "accesslog" : {
                  "type" : "object",
                  "properties" : {
                    "prefix" : {
                      "type" : "string",
                      "description" : "Management log file name prefix.",
                      "default" : "management_"
                    }
                  }
                }
              }
            },
            "add-application-context-header" : {
              "type" : "boolean",
              "description" : "Add the \"X-Application-Context\" HTTP header in each response.",
              "default" : false
            },
            "ssl" : {
              "type" : "object",
              "properties" : {
                "certificate-private-key" : {
                  "type" : "string",
                  "description" : "Path to a PEM-encoded private key file for the SSL certificate."
                },
                "trust-store" : {
                  "type" : "string",
                  "description" : "Trust store that holds SSL certificates."
                },
                "certificate" : {
                  "type" : "string",
                  "description" : "Path to a PEM-encoded SSL certificate file."
                },
                "server-name-bundles" : {
                  "type" : "array",
                  "description" : "Mapping of host names to SSL bundles for SNI configuration.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "server-name" : {
                        "type" : "string"
                      },
                      "bundle" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "key-password" : {
                  "type" : "string",
                  "description" : "Password used to access the key in the key store."
                },
                "key-store" : {
                  "type" : "string",
                  "description" : "Path to the key store that holds the SSL certificate (typically a jks file)."
                },
                "trust-certificate" : {
                  "type" : "string"
                },
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Whether to enable SSL support.",
                  "default" : true
                },
                "key-store-provider" : {
                  "type" : "string",
                  "description" : "Provider for the key store."
                },
                "trust-store-provider" : {
                  "type" : "string",
                  "description" : "Provider for the trust store."
                },
                "enabled-protocols" : {
                  "type" : "array",
                  "description" : "Enabled SSL protocols.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "trust-certificate-private-key" : {
                  "type" : "string",
                  "description" : "Path to a PEM-encoded private key file for the SSL certificate authority."
                },
                "protocol" : {
                  "type" : "string",
                  "description" : "SSL protocol to use.",
                  "default" : "TLS"
                },
                "key-alias" : {
                  "type" : "string",
                  "description" : "Alias that identifies the key in the key store."
                },
                "client-auth" : {
                  "type" : "string",
                  "description" : "Client authentication mode. Requires a trust store.",
                  "enum" : [ "NONE", "none", "WANT", "want", "NEED", "need" ]
                },
                "key-store-type" : {
                  "type" : "string",
                  "description" : "Type of the key store."
                },
                "trust-store-type" : {
                  "type" : "string",
                  "description" : "Type of the trust store."
                },
                "ciphers" : {
                  "type" : "array",
                  "description" : "Supported SSL ciphers.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "bundle" : {
                  "type" : "string",
                  "description" : "Name of a configured SSL bundle."
                },
                "key-store-password" : {
                  "type" : "string",
                  "description" : "Password used to access the key store."
                },
                "trust-store-password" : {
                  "type" : "string",
                  "description" : "Password used to access the trust store."
                }
              }
            }
          }
        },
        "endpoint" : {
          "type" : "object",
          "properties" : {
            "health" : {
              "type" : "object",
              "properties" : {
                "show-components" : {
                  "type" : "string",
                  "description" : "When to show components. If not specified the 'show-details' setting will be used.",
                  "enum" : [ "NEVER", "never", "WHEN_AUTHORIZED", "when_authorized", "ALWAYS", "always" ]
                },
                "validate-group-membership" : {
                  "type" : "boolean",
                  "description" : "Whether to validate health group membership on startup. Validation fails if a group includes or excludes a health contributor that does not exist.",
                  "default" : true
                },
                "roles" : {
                  "type" : "array",
                  "description" : "Roles used to determine whether a user is authorized to be shown details. When empty, all authenticated users are authorized.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "logging" : {
                  "type" : "object",
                  "properties" : {
                    "slow-indicator-threshold" : {
                      "type" : "string",
                      "description" : "Threshold after which a warning will be logged for slow health indicators.",
                      "default" : "10s"
                    }
                  }
                },
                "probes" : {
                  "type" : "object",
                  "properties" : {
                    "add-additional-paths" : {
                      "type" : "boolean",
                      "description" : "Whether to make the liveness and readiness health groups available on the main server port.",
                      "default" : false
                    },
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether to enable liveness and readiness probes.",
                      "default" : false
                    }
                  }
                },
                "id" : {
                  "type" : "object",
                  "properties" : {
                    "lower-case-alpha-numeric" : {
                      "type" : "string"
                    },
                    "migrate_legacy_names_property" : {
                      "type" : "string"
                    },
                    "logger" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "logged-warnings" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "value" : {
                      "type" : "string"
                    },
                    "valid_pattern" : {
                      "type" : "object",
                      "properties" : {
                        "cursor" : {
                          "type" : "integer"
                        },
                        "top-closure-nodes" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "next" : {
                                "type" : "object",
                                "properties" : { }
                              }
                            }
                          }
                        },
                        "local-count" : {
                          "type" : "integer"
                        },
                        "named-groups" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "integer"
                          }
                        },
                        "match-root" : {
                          "type" : "object",
                          "properties" : {
                            "next" : {
                              "type" : "object",
                              "properties" : { }
                            }
                          }
                        },
                        "pattern" : {
                          "type" : "string"
                        },
                        "flags" : {
                          "type" : "integer"
                        },
                        "serial-version-uid" : {
                          "type" : "integer"
                        },
                        "pattern-length" : {
                          "type" : "integer"
                        },
                        "unicode_case" : {
                          "type" : "integer"
                        },
                        "literal" : {
                          "type" : "integer"
                        },
                        "dotall" : {
                          "type" : "integer"
                        },
                        "predicate" : {
                          "type" : "object",
                          "properties" : { }
                        },
                        "compiled" : {
                          "type" : "boolean"
                        },
                        "all_flags" : {
                          "type" : "integer"
                        },
                        "root" : {
                          "type" : "object",
                          "properties" : {
                            "next" : {
                              "type" : "object",
                              "properties" : { }
                            }
                          }
                        },
                        "unicode_character_class" : {
                          "type" : "integer"
                        },
                        "buffer" : {
                          "type" : "array",
                          "items" : {
                            "type" : "integer"
                          }
                        },
                        "capturing-group-count" : {
                          "type" : "integer"
                        },
                        "local-tcncount" : {
                          "type" : "integer"
                        },
                        "temp" : {
                          "type" : "array",
                          "items" : {
                            "type" : "integer"
                          }
                        },
                        "comments" : {
                          "type" : "integer"
                        },
                        "max_reps" : {
                          "type" : "integer"
                        },
                        "flags0" : {
                          "type" : "integer"
                        },
                        "case_insensitive" : {
                          "type" : "integer"
                        },
                        "canon_eq" : {
                          "type" : "integer"
                        },
                        "last-accept" : {
                          "type" : "object",
                          "properties" : {
                            "next" : {
                              "type" : "object",
                              "properties" : { }
                            }
                          }
                        },
                        "$assertions-disabled" : {
                          "type" : "boolean"
                        },
                        "has-group-ref" : {
                          "type" : "boolean"
                        },
                        "accept" : {
                          "type" : "object",
                          "properties" : {
                            "next" : {
                              "type" : "object",
                              "properties" : { }
                            }
                          }
                        },
                        "unix_lines" : {
                          "type" : "integer"
                        },
                        "multiline" : {
                          "type" : "integer"
                        },
                        "group-nodes" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object"
                          }
                        },
                        "has-supplementary" : {
                          "type" : "boolean"
                        },
                        "normalized-pattern" : {
                          "type" : "string"
                        }
                      }
                    },
                    "lower-case-value" : {
                      "type" : "string"
                    },
                    "warning_pattern" : {
                      "type" : "object",
                      "properties" : {
                        "cursor" : {
                          "type" : "integer"
                        },
                        "top-closure-nodes" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "next" : {
                                "type" : "object",
                                "properties" : { }
                              }
                            }
                          }
                        },
                        "local-count" : {
                          "type" : "integer"
                        },
                        "named-groups" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "integer"
                          }
                        },
                        "match-root" : {
                          "type" : "object",
                          "properties" : {
                            "next" : {
                              "type" : "object",
                              "properties" : { }
                            }
                          }
                        },
                        "pattern" : {
                          "type" : "string"
                        },
                        "flags" : {
                          "type" : "integer"
                        },
                        "serial-version-uid" : {
                          "type" : "integer"
                        },
                        "pattern-length" : {
                          "type" : "integer"
                        },
                        "unicode_case" : {
                          "type" : "integer"
                        },
                        "literal" : {
                          "type" : "integer"
                        },
                        "dotall" : {
                          "type" : "integer"
                        },
                        "predicate" : {
                          "type" : "object",
                          "properties" : { }
                        },
                        "compiled" : {
                          "type" : "boolean"
                        },
                        "all_flags" : {
                          "type" : "integer"
                        },
                        "root" : {
                          "type" : "object",
                          "properties" : {
                            "next" : {
                              "type" : "object",
                              "properties" : { }
                            }
                          }
                        },
                        "unicode_character_class" : {
                          "type" : "integer"
                        },
                        "buffer" : {
                          "type" : "array",
                          "items" : {
                            "type" : "integer"
                          }
                        },
                        "capturing-group-count" : {
                          "type" : "integer"
                        },
                        "local-tcncount" : {
                          "type" : "integer"
                        },
                        "temp" : {
                          "type" : "array",
                          "items" : {
                            "type" : "integer"
                          }
                        },
                        "comments" : {
                          "type" : "integer"
                        },
                        "max_reps" : {
                          "type" : "integer"
                        },
                        "flags0" : {
                          "type" : "integer"
                        },
                        "case_insensitive" : {
                          "type" : "integer"
                        },
                        "canon_eq" : {
                          "type" : "integer"
                        },
                        "last-accept" : {
                          "type" : "object",
                          "properties" : {
                            "next" : {
                              "type" : "object",
                              "properties" : { }
                            }
                          }
                        },
                        "$assertions-disabled" : {
                          "type" : "boolean"
                        },
                        "has-group-ref" : {
                          "type" : "boolean"
                        },
                        "accept" : {
                          "type" : "object",
                          "properties" : {
                            "next" : {
                              "type" : "object",
                              "properties" : { }
                            }
                          }
                        },
                        "unix_lines" : {
                          "type" : "integer"
                        },
                        "multiline" : {
                          "type" : "integer"
                        },
                        "group-nodes" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object"
                          }
                        },
                        "has-supplementary" : {
                          "type" : "boolean"
                        },
                        "normalized-pattern" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                },
                "empty_path" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Whether to enable the health endpoint.",
                  "default" : true,
                  "deprecated" : true,
                  "x-deprecation" : {
                    "replacement" : "management.endpoint.health.access",
                    "since" : "3.4.0"
                  }
                },
                "status" : {
                  "type" : "object",
                  "properties" : {
                    "http-mapping" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "integer"
                      }
                    },
                    "order" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "group" : {
                  "type" : "object",
                  "description" : "Health endpoint groups.",
                  "additionalProperties" : {
                    "type" : "object",
                    "properties" : {
                      "server_prefix" : {
                        "type" : "string"
                      },
                      "include" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "show-details" : {
                        "type" : "string"
                      },
                      "exclude" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "management_prefix" : {
                        "type" : "string"
                      },
                      "additional-path" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "endpoints" : {
          "type" : "object",
          "properties" : {
            "web" : {
              "type" : "object",
              "properties" : {
                "path-mapping" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                },
                "cors" : {
                  "type" : "object",
                  "properties" : {
                    "allowed-headers" : {
                      "type" : "array",
                      "description" : "List of headers to allow in a request. '*' allows all headers.",
                      "examples" : [ "*" ],
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "allowed-origins" : {
                      "type" : "array",
                      "description" : "List of origins to allow. '*' allows all origins. When credentials are allowed, '*' cannot be used and origin patterns should be configured instead. When no allowed origins or allowed origin patterns are set, CORS support is disabled.",
                      "examples" : [ "*" ],
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "exposed-headers" : {
                      "type" : "array",
                      "description" : "List of headers to include in a response.",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "allowed-origin-patterns" : {
                      "type" : "array",
                      "description" : "List of origin patterns to allow. Unlike allowed origins which only supports '*', origin patterns are more flexible (for example 'https://*.example.com') and can be used when credentials are allowed. When no allowed origin patterns or allowed origins are set, CORS support is disabled.",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "exposure" : {
                  "type" : "object",
                  "properties" : {
                    "include" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "exclude" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "discovery" : {
                  "type" : "object",
                  "properties" : {
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether the discovery page is enabled.",
                      "default" : true
                    }
                  }
                },
                "base-path" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tracing" : {
          "type" : "object",
          "properties" : {
            "enabled" : {
              "type" : "boolean",
              "description" : "Whether auto-configuration of tracing is enabled to export and propagate traces.",
              "default" : true
            }
          }
        },
        "defaults" : {
          "type" : "object",
          "properties" : {
            "metrics" : {
              "type" : "object",
              "properties" : {
                "export" : {
                  "type" : "object",
                  "properties" : {
                    "enabled" : {
                      "type" : "boolean",
                      "description" : "Whether to enable default metrics exporters.",
                      "default" : true
                    }
                  }
                }
              }
            }
          }
        },
        "observations" : {
          "type" : "object",
          "properties" : {
            "long-task-timer" : {
              "type" : "object",
              "properties" : {
                "enabled" : {
                  "type" : "boolean"
                }
              }
            },
            "enable" : {
              "type" : "object",
              "description" : "Whether observations starting with the specified name should be enabled. The longest match wins, the key 'all' can also be used to configure all observations.",
              "additionalProperties" : {
                "type" : "boolean"
              }
            },
            "http" : {
              "type" : "object",
              "properties" : {
                "server" : {
                  "type" : "object",
                  "properties" : {
                    "requests" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                },
                "client" : {
                  "type" : "object",
                  "properties" : {
                    "requests" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "type" : "string",
                          "description" : "Name of the observation for client requests.",
                          "default" : "http.client.requests"
                        }
                      }
                    }
                  }
                }
              }
            },
            "r2dbc" : {
              "type" : "object",
              "properties" : {
                "include-parameter-values" : {
                  "type" : "boolean"
                }
              }
            },
            "key-values" : {
              "type" : "object",
              "description" : "Common key-values that are applied to every observation.",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        },
        "health" : {
          "type" : "object",
          "properties" : {
            "diskspace" : {
              "type" : "object",
              "properties" : {
                "path" : {
                  "type" : "string"
                },
                "threshold" : {
                  "type" : "string",
                  "description" : "Minimum disk space that should be available.",
                  "default" : "10MB"
                }
              }
            },
            "ssl" : {
              "type" : "object",
              "properties" : {
                "certificate-validity-warning-threshold" : {
                  "type" : "string"
                }
              }
            },
            "db" : {
              "type" : "object",
              "properties" : {
                "ignore-routing-data-sources" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "simple" : {
          "type" : "object",
          "properties" : {
            "metrics" : {
              "type" : "object",
              "properties" : {
                "export" : {
                  "type" : "object",
                  "properties" : {
                    "mode" : {
                      "type" : "string",
                      "description" : "Counting mode.",
                      "default" : "cumulative",
                      "enum" : [ "CUMULATIVE", "cumulative", "STEP", "step" ]
                    },
                    "step" : {
                      "type" : "string"
                    },
                    "enabled" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "metrics" : {
          "type" : "object",
          "properties" : {
            "mongo" : {
              "type" : "object",
              "properties" : {
                "connectionpool" : {
                  "type" : "object",
                  "properties" : { }
                },
                "command" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "use-global-registry" : {
              "type" : "boolean",
              "description" : "Whether auto-configured MeterRegistry implementations should be bound to the global static registry on Metrics. For testing, set this to 'false' to maximize test independence.",
              "default" : true
            },
            "system" : {
              "type" : "object",
              "properties" : {
                "diskspace" : {
                  "type" : "object",
                  "properties" : {
                    "paths" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            },
            "data" : {
              "type" : "object",
              "properties" : {
                "repository" : {
                  "type" : "object",
                  "properties" : {
                    "autotime" : {
                      "type" : "object",
                      "properties" : {
                        "percentiles" : {
                          "type" : "array",
                          "items" : {
                            "type" : "number"
                          }
                        },
                        "percentiles-histogram" : {
                          "type" : "boolean"
                        },
                        "enabled" : {
                          "type" : "boolean"
                        }
                      }
                    },
                    "metric-name" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "web" : {
              "type" : "object",
              "properties" : {
                "server" : {
                  "type" : "object",
                  "properties" : {
                    "request" : {
                      "type" : "object",
                      "properties" : {
                        "autotime" : {
                          "type" : "object",
                          "properties" : { }
                        }
                      }
                    },
                    "max-uri-tags" : {
                      "type" : "integer",
                      "description" : "Maximum number of unique URI tag values allowed. After the max number of tag values is reached, metrics with additional tag values are denied by filter.",
                      "default" : 100
                    }
                  }
                },
                "client" : {
                  "type" : "object",
                  "properties" : {
                    "request" : {
                      "type" : "object",
                      "properties" : {
                        "autotime" : {
                          "type" : "object",
                          "properties" : { }
                        }
                      }
                    },
                    "max-uri-tags" : {
                      "type" : "integer",
                      "description" : "Maximum number of unique URI tag values allowed. After the max number of tag values is reached, metrics with additional tag values are denied by filter.",
                      "default" : 100
                    }
                  }
                }
              }
            },
            "binders" : {
              "type" : "object",
              "properties" : {
                "jvm" : {
                  "type" : "object",
                  "properties" : { }
                },
                "files" : {
                  "type" : "object",
                  "properties" : { }
                },
                "uptime" : {
                  "type" : "object",
                  "properties" : { }
                },
                "logback" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "enable" : {
              "type" : "object",
              "description" : "Whether meter IDs starting with the specified name should be enabled. The longest match wins, the key 'all' can also be used to configure all meters.",
              "additionalProperties" : {
                "type" : "boolean"
              }
            },
            "distribution" : {
              "type" : "object",
              "properties" : {
                "minimum-expected-value" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                },
                "percentiles" : {
                  "type" : "array",
                  "description" : "Specific computed non-aggregable percentiles to ship to the backend for meter IDs starting-with the specified name. The longest match wins, the key 'all' can also be used to configure all meters.",
                  "items" : {
                    "type" : "object"
                  }
                },
                "buffer-length" : {
                  "type" : "object",
                  "description" : "Number of histograms for meter IDs starting with the specified name to keep in the ring buffer. The longest match wins, the key `all` can also be used to configure all meters.",
                  "additionalProperties" : {
                    "type" : "integer"
                  }
                },
                "percentiles-histogram" : {
                  "type" : "object",
                  "description" : "Whether meter IDs starting with the specified name should publish percentile histograms. For monitoring systems that support aggregable percentile calculation based on a histogram, this can be set to true. For other systems, this has no effect. The longest match wins, the key 'all' can also be used to configure all meters.",
                  "additionalProperties" : {
                    "type" : "boolean"
                  }
                },
                "slo" : {
                  "type" : "array",
                  "description" : "Specific service-level objective boundaries for meter IDs starting with the specified name. The longest match wins. Counters will be published for each specified boundary. Values can be specified as a double or as a Duration value (for timer meters, defaulting to ms if no unit specified).",
                  "items" : {
                    "type" : "object"
                  }
                },
                "expiry" : {
                  "type" : "object",
                  "description" : "Maximum amount of time that samples for meter IDs starting with the specified name are accumulated to decaying distribution statistics before they are reset and rotated. The longest match wins, the key `all` can also be used to configure all meters.",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                },
                "maximum-expected-value" : {
                  "type" : "object",
                  "description" : "Maximum value that meter IDs starting with the specified name are expected to observe. The longest match wins. Values can be specified as a double or as a Duration value (for timer meters, defaulting to ms if no unit specified).",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            },
            "graphql" : {
              "type" : "object",
              "properties" : {
                "autotime" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            },
            "export" : {
              "type" : "object",
              "properties" : {
                "influx" : {
                  "type" : "object",
                  "properties" : { }
                },
                "atlas" : {
                  "type" : "object",
                  "properties" : { }
                },
                "statsd" : {
                  "type" : "object",
                  "properties" : { }
                },
                "dynatrace" : {
                  "type" : "object",
                  "properties" : {
                    "v1" : {
                      "type" : "object",
                      "properties" : { }
                    },
                    "v2" : {
                      "type" : "object",
                      "properties" : { }
                    }
                  }
                },
                "simple" : {
                  "type" : "object",
                  "properties" : { }
                },
                "graphite" : {
                  "type" : "object",
                  "properties" : { }
                },
                "stackdriver" : {
                  "type" : "object",
                  "properties" : { }
                },
                "signalfx" : {
                  "type" : "object",
                  "properties" : { }
                },
                "newrelic" : {
                  "type" : "object",
                  "properties" : { }
                },
                "appoptics" : {
                  "type" : "object",
                  "properties" : { }
                },
                "defaults" : {
                  "type" : "object",
                  "properties" : { }
                },
                "jmx" : {
                  "type" : "object",
                  "properties" : { }
                },
                "humio" : {
                  "type" : "object",
                  "properties" : { }
                },
                "ganglia" : {
                  "type" : "object",
                  "properties" : { }
                },
                "datadog" : {
                  "type" : "object",
                  "properties" : { }
                },
                "elastic" : {
                  "type" : "object",
                  "properties" : { }
                },
                "prometheus" : {
                  "type" : "object",
                  "properties" : {
                    "pushgateway" : {
                      "type" : "object",
                      "properties" : { }
                    }
                  }
                },
                "kairos" : {
                  "type" : "object",
                  "properties" : { }
                },
                "wavefront" : {
                  "type" : "object",
                  "properties" : {
                    "sender" : {
                      "type" : "object",
                      "properties" : { }
                    }
                  }
                }
              }
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        },
        "info" : {
          "type" : "object",
          "properties" : {
            "process" : {
              "type" : "object",
              "properties" : {
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Whether to enable process info.",
                  "default" : false
                }
              }
            },
            "git" : {
              "type" : "object",
              "properties" : {
                "mode" : {
                  "type" : "string",
                  "description" : "Mode to use to expose git information.",
                  "default" : "simple",
                  "enum" : [ "FULL", "full", "SIMPLE", "simple" ]
                },
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Whether to enable git info.",
                  "default" : true
                }
              }
            },
            "java" : {
              "type" : "object",
              "properties" : {
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Whether to enable Java info.",
                  "default" : false
                }
              }
            },
            "os" : {
              "type" : "object",
              "properties" : {
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Whether to enable Operating System info.",
                  "default" : false
                }
              }
            },
            "defaults" : {
              "type" : "object",
              "properties" : {
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Whether to enable default info contributors.",
                  "default" : true
                }
              }
            },
            "build" : {
              "type" : "object",
              "properties" : {
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Whether to enable build info.",
                  "default" : true
                }
              }
            },
            "env" : {
              "type" : "object",
              "properties" : {
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Whether to enable environment info.",
                  "default" : false
                }
              }
            },
            "ssl" : {
              "type" : "object",
              "properties" : {
                "enabled" : {
                  "type" : "boolean",
                  "description" : "Whether to enable SSL certificate info.",
                  "default" : false
                }
              }
            }
          }
        }
      }
    },
    "logging" : {
      "type" : "object",
      "properties" : {
        "logging_lifecycle_bean_name" : {
          "type" : "string"
        },
        "logger_groups_bean_name" : {
          "type" : "string"
        },
        "logger" : {
          "type" : "object",
          "properties" : { }
        },
        "pattern" : {
          "type" : "object",
          "properties" : {
            "rolling-file-name" : {
              "type" : "string",
              "description" : "Pattern for rolled-over log file names. Supported only with the default Logback setup.",
              "default" : "${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz",
              "deprecated" : true,
              "x-deprecation" : {
                "replacement" : "logging.logback.rollingpolicy.file-name-pattern"
              }
            }
          }
        },
        "register_shutdown_hook_property" : {
          "type" : "string"
        },
        "logging-system" : {
          "type" : "object",
          "properties" : {
            "root_logger_name" : {
              "type" : "string"
            },
            "system_property" : {
              "type" : "string"
            },
            "none" : {
              "type" : "string"
            },
            "system_factory" : {
              "type" : "object",
              "properties" : { }
            },
            "expect_correlation_id_property" : {
              "type" : "string"
            }
          }
        },
        "logging_group" : {
          "type" : "object",
          "properties" : {
            "hash-code" : {
              "type" : "integer"
            },
            "system-environment-legacy-name" : {
              "type" : "object",
              "properties" : { }
            },
            "string" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "elements" : {
              "type" : "object",
              "properties" : {
                "no_type" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "hash-code" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                },
                "no_position" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                },
                "size" : {
                  "type" : "integer"
                },
                "start" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                },
                "end" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                },
                "source" : {
                  "type" : "string"
                },
                "type" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "empty" : {
                  "type" : "object",
                  "properties" : { }
                },
                "resolved" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "has-dashed-element" : {
              "type" : "boolean"
            },
            "uniform-elements" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "empty_string" : {
              "type" : "string"
            },
            "empty" : {
              "type" : "object",
              "properties" : { }
            }
          }
        },
        "log_file_bean_name" : {
          "type" : "string"
        },
        "config_property" : {
          "type" : "string"
        },
        "spring_boot_logging_loggers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "shutdown-hook-registered" : {
          "type" : "object",
          "properties" : {
            "serial-version-uid" : {
              "type" : "integer"
            },
            "value" : {
              "type" : "integer"
            }
          }
        },
        "log-file" : {
          "type" : "object",
          "properties" : {
            "path" : {
              "type" : "string"
            },
            "file" : {
              "type" : "string"
            },
            "file_name_property" : {
              "type" : "string"
            },
            "file_path_property" : {
              "type" : "string"
            }
          }
        },
        "string_strings_map" : {
          "type" : "string"
        },
        "order" : {
          "type" : "integer"
        },
        "spring-boot-logging" : {
          "type" : "string"
        },
        "include-application-group" : {
          "type" : "boolean",
          "description" : "Whether to include the application group in the logs.",
          "default" : true
        },
        "logger-groups" : {
          "type" : "object",
          "properties" : {
            "groups" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : {
                  "members" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "configured-level" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "default_order" : {
          "type" : "integer"
        },
        "logging_level" : {
          "type" : "object",
          "properties" : {
            "hash-code" : {
              "type" : "integer"
            },
            "system-environment-legacy-name" : {
              "type" : "object",
              "properties" : { }
            },
            "string" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "elements" : {
              "type" : "object",
              "properties" : {
                "no_type" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "hash-code" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                },
                "no_position" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                },
                "size" : {
                  "type" : "integer"
                },
                "start" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                },
                "end" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                },
                "source" : {
                  "type" : "string"
                },
                "type" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "empty" : {
                  "type" : "object",
                  "properties" : { }
                },
                "resolved" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "has-dashed-element" : {
              "type" : "boolean"
            },
            "uniform-elements" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "empty_string" : {
              "type" : "string"
            },
            "empty" : {
              "type" : "object",
              "properties" : { }
            }
          }
        },
        "event_types" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "parse-args" : {
          "type" : "boolean"
        },
        "source_types" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "default_group_loggers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "logging_system_bean_name" : {
          "type" : "string"
        },
        "string_loglevel_map" : {
          "type" : "string"
        }
      }
    },
    "json-config-schema" : {
      "type" : "object",
      "properties" : {
        "schema-spec" : {
          "type" : "string"
        },
        "missing-type-log" : {
          "type" : "boolean",
          "description" : "Controls whether missing type information should be logged. When true, logs will be generated for types that couldn't be mapped during schema generation. This is useful for debugging and identifying unmapped types.",
          "default" : false
        },
        "use-validation" : {
          "type" : "boolean"
        },
        "schema-id" : {
          "type" : "string"
        },
        "use-openapi" : {
          "type" : "boolean",
          "description" : "Enable OpenAPI annotations processing",
          "default" : true
        },
        "description" : {
          "type" : "string",
          "description" : "Schema description",
          "default" : "Auto-generated schema from configuration metadata"
        },
        "title" : {
          "type" : "string"
        },
        "additional-properties" : {
          "type" : "array",
          "description" : "List of additional property paths to include",
          "default" : "logging",
          "items" : {
            "type" : "string"
          }
        },
        "type-properties-map" : {
          "type" : "object",
          "description" : "Map of property names or java objects to their type definitions. Used to store custom type mappings and property configurations that override or extend the default schema generation behavior.",
          "additionalProperties" : {
            "type" : "object",
            "properties" : {
              "reference" : {
                "type" : "string"
              },
              "enums" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "pattern" : {
                "type" : "string"
              },
              "format" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "health" : {
      "type" : "object",
      "properties" : {
        "config" : {
          "type" : "object",
          "properties" : {
            "time-to-live" : {
              "type" : "string",
              "description" : "Time to live for cached result. Default 5 min.",
              "default" : "5m"
            }
          }
        }
      }
    }
  }
}